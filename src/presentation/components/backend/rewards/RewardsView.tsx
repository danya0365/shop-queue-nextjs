'use client';

import { RewardsViewModel } from '@/src/presentation/presenters/backend/rewards/RewardsPresenter';
import { useRewardsPresenter } from '@/src/presentation/presenters/backend/rewards/useRewardsPresenter';
import type { RewardType } from '@/src/domain/entities/RewardEntity';

interface RewardsViewProps {
  viewModel: RewardsViewModel;
}

export function RewardsView({ viewModel }: RewardsViewProps) {
  const [state, actions] = useRewardsPresenter();
  const { rewardsData, rewardTypeStats } = viewModel;

  const getRewardTypeColor = (type: RewardType) => {
    switch (type) {
      case 'discount':
        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300';
      case 'free_item':
        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300';
      case 'cashback':
        return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300';
      case 'special_privilege':
        return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300';
      default:
        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300';
    }
  };

  const getRewardTypeText = (type: RewardType) => {
    switch (type) {
      case 'discount':
        return '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î';
      case 'free_item':
        return '‡∏Ç‡∏≠‡∏á‡∏ü‡∏£‡∏µ';
      case 'cashback':
        return '‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô';
      case 'special_privilege':
        return '‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©';
      default:
        return '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó';
    }
  };

  const getAvailabilityColor = (isAvailable: boolean) => {
    return isAvailable
      ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300'
      : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300';
  };

  const getAvailabilityText = (isAvailable: boolean) => {
    return isAvailable ? '‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô';
  };

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('th-TH', {
      style: 'currency',
      currency: 'THB'
    }).format(amount);
  };

  const formatPoints = (points: number) => {
    return new Intl.NumberFormat('th-TH').format(points) + ' ‡πÅ‡∏ï‡πâ‡∏°';
  };

  const handleToggleAvailability = async (rewardId: string, currentStatus: boolean) => {
    const success = await actions.toggleAvailability({
      rewardId,
      isAvailable: !currentStatus
    });
    if (success) {
      window.location.reload();
    }
  };

  const handleDeleteReward = async (rewardId: string) => {
    if (confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ô‡∏µ‡πâ?')) {
      const success = await actions.deleteReward(rewardId);
      if (success) {
        window.location.reload();
      }
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold backend-text">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</h1>
          <p className="backend-text-muted mt-2">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</p>
        </div>
        <div className="flex space-x-3">
          <button className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">
            ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
          </button>
          <button className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
            ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÉ‡∏´‡∏°‡πà
          </button>
        </div>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
          <h3 className="backend-text-muted text-sm font-medium">‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
          <p className="text-2xl font-bold backend-text mt-2">{rewardsData.stats.totalRewards}</p>
        </div>
        <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
          <h3 className="backend-text-muted text-sm font-medium">‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ</h3>
          <p className="text-2xl font-bold text-green-600 mt-2">{rewardsData.stats.activeRewards}</p>
        </div>
        <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
          <h3 className="backend-text-muted text-sm font-medium">‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
          <p className="text-2xl font-bold text-blue-600 mt-2">{rewardsData.stats.totalRedemptions}</p>
        </div>
        <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
          <h3 className="backend-text-muted text-sm font-medium">‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß</h3>
          <p className="text-2xl font-bold text-purple-600 mt-2">{formatPoints(rewardsData.stats.totalPointsRedeemed)}</p>
        </div>
      </div>

      {/* Reward Type Summary */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="backend-text-muted text-sm font-medium">‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î</h3>
              <p className="text-2xl font-bold text-blue-600 mt-2">{rewardTypeStats.discount.count}</p>
              <p className="text-xs backend-text-muted">{rewardTypeStats.discount.percentage}% ‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
            </div>
            <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
              <span className="text-blue-600 text-xl">üé´</span>
            </div>
          </div>
        </div>
        <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="backend-text-muted text-sm font-medium">‡∏Ç‡∏≠‡∏á‡∏ü‡∏£‡∏µ</h3>
              <p className="text-2xl font-bold text-green-600 mt-2">{rewardTypeStats.free_item.count}</p>
              <p className="text-xs backend-text-muted">{rewardTypeStats.free_item.percentage}% ‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
            </div>
            <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
              <span className="text-green-600 text-xl">üéÅ</span>
            </div>
          </div>
        </div>
        <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="backend-text-muted text-sm font-medium">‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</h3>
              <p className="text-2xl font-bold text-purple-600 mt-2">{rewardTypeStats.cashback.count}</p>
              <p className="text-xs backend-text-muted">{rewardTypeStats.cashback.percentage}% ‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
            </div>
            <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
              <span className="text-purple-600 text-xl">üí∞</span>
            </div>
          </div>
        </div>
        <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="backend-text-muted text-sm font-medium">‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©</h3>
              <p className="text-2xl font-bold text-orange-600 mt-2">{rewardTypeStats.special_privilege.count}</p>
              <p className="text-xs backend-text-muted">{rewardTypeStats.special_privilege.percentage}% ‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
            </div>
            <div className="w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center">
              <span className="text-orange-600 text-xl">üëë</span>
            </div>
          </div>
        </div>
      </div>

      {/* Filter and Search */}
      <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
        <div className="flex flex-col md:flex-row gap-4">
          <div className="flex-1">
            <input
              type="text"
              placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó, ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢..."
              className="w-full px-4 py-2 border backend-sidebar-border rounded-lg backend-sidebar-bg backend-text"
            />
          </div>
          <select className="px-4 py-2 border backend-sidebar-border rounded-lg backend-sidebar-bg backend-text">
            <option value="">‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</option>
            <option value="discount">‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î</option>
            <option value="free_item">‡∏Ç‡∏≠‡∏á‡∏ü‡∏£‡∏µ</option>
            <option value="cashback">‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</option>
            <option value="special_privilege">‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©</option>
          </select>
          <select className="px-4 py-2 border backend-sidebar-border rounded-lg backend-sidebar-bg backend-text">
            <option value="">‡∏ó‡∏∏‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</option>
            <option value="available">‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</option>
            <option value="unavailable">‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</option>
          </select>
          <select className="px-4 py-2 border backend-sidebar-border rounded-lg backend-sidebar-bg backend-text">
            <option value="">‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°</option>
            <option value="name">‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</option>
            <option value="points_required">‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ</option>
            <option value="value">‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤</option>
            <option value="created_at">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á</option>
          </select>
        </div>
      </div>

      {/* Error Message */}
      {state.error && (
        <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
          {state.error}
        </div>
      )}

      {/* Rewards Table */}
      <div className="backend-sidebar-bg rounded-lg backend-sidebar-border border">
        <div className="p-6">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-xl font-semibold backend-text">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</h2>
            <div className="flex space-x-2">
              <button className="text-blue-600 hover:text-blue-800 text-sm">‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä</button>
              <button className="text-green-600 hover:text-green-800 text-sm">‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å Excel</button>
            </div>
          </div>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b backend-sidebar-border">
                  <th className="text-left py-3 px-4 backend-text font-medium">‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</th>
                  <th className="text-left py-3 px-4 backend-text font-medium">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                  <th className="text-left py-3 px-4 backend-text font-medium">‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ</th>
                  <th className="text-left py-3 px-4 backend-text font-medium">‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤</th>
                  <th className="text-left py-3 px-4 backend-text font-medium">‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏</th>
                  <th className="text-left py-3 px-4 backend-text font-medium">‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ</th>
                  <th className="text-left py-3 px-4 backend-text font-medium">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                  <th className="text-left py-3 px-4 backend-text font-medium">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á</th>
                  <th className="text-left py-3 px-4 backend-text font-medium">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                </tr>
              </thead>
              <tbody>
                {rewardsData.rewards.map((reward) => (
                  <tr key={reward.id} className="border-b backend-sidebar-border hover:bg-gray-50 dark:hover:bg-gray-800">
                    <td className="py-3 px-4">
                      <div className="flex items-center space-x-3">
                        <span className="text-2xl">{reward.icon || 'üéÅ'}</span>
                        <div>
                          <p className="backend-text font-medium">{reward.name}</p>
                          <p className="text-sm backend-text-muted">{reward.description || '-'}</p>
                        </div>
                      </div>
                    </td>
                    <td className="py-3 px-4">
                      <span className={`px-2 py-1 text-xs rounded-full ${getRewardTypeColor(reward.type)}`}>
                        {getRewardTypeText(reward.type)}
                      </span>
                    </td>
                    <td className="py-3 px-4 backend-text font-medium">{formatPoints(reward.pointsRequired)}</td>
                    <td className="py-3 px-4 backend-text">
                      {reward.type === 'discount' ? `${reward.value}%` : formatCurrency(reward.value)}
                    </td>
                    <td className="py-3 px-4 backend-text-muted">
                      {reward.expiryDays ? `${reward.expiryDays} ‡∏ß‡∏±‡∏ô` : '‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏'}
                    </td>
                    <td className="py-3 px-4 backend-text-muted">
                      {reward.usageLimit ? `${reward.usageLimit} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á` : '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î'}
                    </td>
                    <td className="py-3 px-4">
                      <span className={`px-2 py-1 text-xs rounded-full ${getAvailabilityColor(reward.isAvailable)}`}>
                        {getAvailabilityText(reward.isAvailable)}
                      </span>
                    </td>
                    <td className="py-3 px-4 backend-text-muted">
                      {new Date(reward.createdAt).toLocaleDateString('th-TH')}
                    </td>
                    <td className="py-3 px-4">
                      <div className="flex space-x-2">
                        <button 
                          onClick={() => handleToggleAvailability(reward.id, reward.isAvailable)}
                          disabled={state.isLoading}
                          className={`text-sm disabled:opacity-50 ${
                            reward.isAvailable 
                              ? 'text-red-600 hover:text-red-800' 
                              : 'text-green-600 hover:text-green-800'
                          }`}
                        >
                          {reward.isAvailable ? '‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : '‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}
                        </button>
                        <button className="text-blue-600 hover:text-blue-800 text-sm">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                        <button 
                          onClick={() => handleDeleteReward(reward.id)}
                          disabled={state.isDeletingReward}
                          className="text-red-600 hover:text-red-800 text-sm disabled:opacity-50"
                        >
                          ‡∏•‡∏ö
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>

      {/* Recent Usage */}
      <div className="backend-sidebar-bg rounded-lg p-6 backend-sidebar-border border">
        <h2 className="text-xl font-semibold backend-text mb-4">‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h2>
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead>
              <tr className="border-b backend-sidebar-border">
                <th className="text-left py-3 px-4 backend-text font-medium">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
                <th className="text-left py-3 px-4 backend-text font-medium">‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</th>
                <th className="text-left py-3 px-4 backend-text font-medium">‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ</th>
                <th className="text-left py-3 px-4 backend-text font-medium">‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤</th>
                <th className="text-left py-3 px-4 backend-text font-medium">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏¥‡∏ß</th>
                <th className="text-left py-3 px-4 backend-text font-medium">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏Å</th>
              </tr>
            </thead>
            <tbody>
              {rewardsData.recentUsage.map((usage) => {
                const reward = rewardsData.rewards.find(r => r.id === usage.rewardId);
                return (
                  <tr key={usage.id} className="border-b backend-sidebar-border hover:bg-gray-50 dark:hover:bg-gray-800">
                    <td className="py-3 px-4 backend-text">{usage.customerName}</td>
                    <td className="py-3 px-4">
                      <div className="flex items-center space-x-2">
                        <span className="text-lg">{reward?.icon || 'üéÅ'}</span>
                        <span className="backend-text">{reward?.name || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•'}</span>
                      </div>
                    </td>
                    <td className="py-3 px-4 backend-text">{formatPoints(usage.pointsUsed)}</td>
                    <td className="py-3 px-4 backend-text">{formatCurrency(usage.rewardValue)}</td>
                    <td className="py-3 px-4 backend-text-muted">{usage.queueNumber || '-'}</td>
                    <td className="py-3 px-4 backend-text-muted">
                      {new Date(usage.usedAt).toLocaleDateString('th-TH')}
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
      </div>

      {/* Pagination */}
      <div className="flex justify-between items-center">
        <p className="backend-text-muted text-sm">
          ‡πÅ‡∏™‡∏î‡∏á 1-{rewardsData.rewards.length} ‡∏à‡∏≤‡∏Å {rewardsData.totalCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        </p>
        <div className="flex space-x-2">
          <button className="px-3 py-1 border backend-sidebar-border rounded backend-text-muted hover:backend-text">‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤</button>
          <button className="px-3 py-1 bg-blue-600 text-white rounded">1</button>
          <button className="px-3 py-1 border backend-sidebar-border rounded backend-text-muted hover:backend-text">2</button>
          <button className="px-3 py-1 border backend-sidebar-border rounded backend-text-muted hover:backend-text">3</button>
          <button className="px-3 py-1 border backend-sidebar-border rounded backend-text-muted hover:backend-text">‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</button>
        </div>
      </div>
    </div>
  );
}
