'use client';

import React, { useState } from 'react';
import type { SettingsViewModel } from '@/src/presentation/presenters/shop/backend/SettingsPresenter';

interface SettingsViewProps {
  viewModel: SettingsViewModel;
}

export function SettingsView({ viewModel }: SettingsViewProps) {
  const [activeTab, setActiveTab] = useState<'shop' | 'queue' | 'payment' | 'notifications' | 'system'>('shop');
  const [hasChanges, setHasChanges] = useState(false);

  const handleSave = () => {
    console.log('Saving settings...');
    setHasChanges(false);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="py-4">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-2xl font-bold text-gray-900">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</h1>
                <p className="text-sm text-gray-600">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ</p>
              </div>
              {hasChanges && (
                <div className="flex space-x-3">
                  <button
                    onClick={() => setHasChanges(false)}
                    className="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors"
                  >
                    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                  </button>
                  <button
                    onClick={handleSave}
                    className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                  >
                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div className="bg-white rounded-lg shadow-sm border">
          {/* Tabs */}
          <div className="border-b border-gray-200">
            <nav className="flex space-x-8 px-6">
              {[
                { id: 'shop', name: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô', icon: 'üè™' },
                { id: 'queue', name: '‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß', icon: 'üìã' },
                { id: 'payment', name: '‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', icon: 'üí≥' },
                { id: 'notifications', name: '‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô', icon: 'üîî' },
                { id: 'system', name: '‡∏£‡∏∞‡∏ö‡∏ö', icon: '‚öôÔ∏è' },
              ].map((tab) => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id as any)}
                  className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center gap-2 ${
                    activeTab === tab.id
                      ? 'border-blue-500 text-blue-600'
                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  }`}
                >
                  <span>{tab.icon}</span>
                  {tab.name}
                </button>
              ))}
            </nav>
          </div>

          {/* Shop Settings Tab */}
          {activeTab === 'shop' && (
            <div className="p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-6">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô</h3>
              <div className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô</label>
                    <input
                      type="text"
                      defaultValue={viewModel.shopSettings.shopName}
                      onChange={() => setHasChanges(true)}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
                    <input
                      type="tel"
                      defaultValue={viewModel.shopSettings.phone}
                      onChange={() => setHasChanges(true)}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡πâ‡∏≤‡∏ô</label>
                  <textarea
                    defaultValue={viewModel.shopSettings.shopDescription}
                    onChange={() => setHasChanges(true)}
                    rows={3}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>

                <div>
                  <h4 className="text-md font-medium text-gray-900 mb-4">‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£</h4>
                  <div className="space-y-3">
                    {viewModel.shopSettings.openingHours.map((hour) => (
                      <div key={hour.day} className="flex items-center space-x-4">
                        <div className="w-20">
                          <span className="text-sm font-medium text-gray-700">{hour.day}</span>
                        </div>
                        <div className="flex items-center">
                          <input
                            type="checkbox"
                            defaultChecked={hour.isOpen}
                            onChange={() => setHasChanges(true)}
                            className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                          />
                          <span className="ml-2 text-sm text-gray-600">‡πÄ‡∏õ‡∏¥‡∏î</span>
                        </div>
                        {hour.isOpen && (
                          <>
                            <input
                              type="time"
                              defaultValue={hour.openTime}
                              onChange={() => setHasChanges(true)}
                              className="px-3 py-1 border border-gray-300 rounded text-sm"
                            />
                            <span className="text-sm text-gray-500">‡∏ñ‡∏∂‡∏á</span>
                            <input
                              type="time"
                              defaultValue={hour.closeTime}
                              onChange={() => setHasChanges(true)}
                              className="px-3 py-1 border border-gray-300 rounded text-sm"
                            />
                          </>
                        )}
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Queue Settings Tab */}
          {activeTab === 'queue' && (
            <div className="p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-6">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏ß</h3>
              <div className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</label>
                    <input
                      type="number"
                      defaultValue={viewModel.queueSettings.maxQueueSize}
                      onChange={() => setHasChanges(true)}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡∏ô‡∏≤‡∏ó‡∏µ)</label>
                    <input
                      type="number"
                      defaultValue={viewModel.queueSettings.estimatedServiceTime}
                      onChange={() => setHasChanges(true)}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg"
                    />
                  </div>
                </div>

                <div className="space-y-4">
                  <div className="flex items-center">
                    <input
                      type="checkbox"
                      defaultChecked={viewModel.queueSettings.allowAdvanceBooking}
                      onChange={() => setHasChanges(true)}
                      className="rounded border-gray-300 text-blue-600"
                    />
                    <label className="ml-2 text-sm font-medium text-gray-700">‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤</label>
                  </div>
                  <div className="flex items-center">
                    <input
                      type="checkbox"
                      defaultChecked={viewModel.queueSettings.autoAssignEmployee}
                      onChange={() => setHasChanges(true)}
                      className="rounded border-gray-300 text-blue-600"
                    />
                    <label className="ml-2 text-sm font-medium text-gray-700">‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</label>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Payment Settings Tab */}
          {activeTab === 'payment' && (
            <div className="p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-6">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h3>
              <div className="space-y-6">
                <div>
                  <h4 className="text-md font-medium text-gray-900 mb-4">‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö</h4>
                  <div className="space-y-3">
                    <div className="flex items-center">
                      <input type="checkbox" defaultChecked={viewModel.paymentSettings.acceptCash} onChange={() => setHasChanges(true)} className="rounded border-gray-300 text-blue-600" />
                      <label className="ml-2 text-sm font-medium text-gray-700">üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î</label>
                    </div>
                    <div className="flex items-center">
                      <input type="checkbox" defaultChecked={viewModel.paymentSettings.acceptCard} onChange={() => setHasChanges(true)} className="rounded border-gray-300 text-blue-600" />
                      <label className="ml-2 text-sm font-medium text-gray-700">üí≥ ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï</label>
                    </div>
                    <div className="flex items-center">
                      <input type="checkbox" defaultChecked={viewModel.paymentSettings.acceptQR} onChange={() => setHasChanges(true)} className="rounded border-gray-300 text-blue-600" />
                      <label className="ml-2 text-sm font-medium text-gray-700">üì± QR Code</label>
                    </div>
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏†‡∏≤‡∏©‡∏µ (%)</label>
                    <input type="number" step="0.01" defaultValue={viewModel.paymentSettings.taxRate} onChange={() => setHasChanges(true)} className="w-full px-3 py-2 border border-gray-300 rounded-lg" />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ (%)</label>
                    <input type="number" step="0.01" defaultValue={viewModel.paymentSettings.serviceCharge} onChange={() => setHasChanges(true)} className="w-full px-3 py-2 border border-gray-300 rounded-lg" />
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Other tabs with simplified content */}
          {activeTab === 'notifications' && (
            <div className="p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-6">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h3>
              <div className="text-center py-8">
                <span className="text-6xl mb-4 block">üîî</span>
                <p className="text-gray-600">‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÉ‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</p>
              </div>
            </div>
          )}

          {activeTab === 'system' && (
            <div className="p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-6">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</h3>
              <div className="text-center py-8">
                <span className="text-6xl mb-4 block">‚öôÔ∏è</span>
                <p className="text-gray-600">‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÉ‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
