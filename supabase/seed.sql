-- Shop Queue Seed Data - Users
-- Created: 2025-06-19
-- Author: Marosdee Uma
-- Description: Sample user data for testing Shop Queue application

-- Set app password for testing
set session my.app_password = '12345678';

-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô auth.users
-- ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô crypt ‡πÅ‡∏•‡∏∞ gen_salt ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    -- Admin user
    (
        '00000000-0000-0000-0000-000000000000',
        '00000000-0000-0000-0000-000000000001',
        'authenticated',
        'authenticated',
        'admin@shopqueue.com',
        crypt (current_setting('my.app_password'), gen_salt ('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "admin",
          "full_name": "Admin User",
          "role": "admin",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    ),
    -- Regular user 1
    (
        '00000000-0000-0000-0000-000000000000',
        '00000000-0000-0000-0000-000000000003',
        'authenticated',
        'authenticated',
        'user1@shopqueue.com',
        crypt (current_setting('my.app_password'), gen_salt ('bf')),
        NOW() - INTERVAL '20 days',
        NULL,
        NOW() - INTERVAL '3 days',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "user1",
          "full_name": "Regular User 1",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '20 days',
        NOW() - INTERVAL '20 days',
        '',
        '',
        '',
        ''
    ),
    -- Regular user 2
    (
        '00000000-0000-0000-0000-000000000000',
        '00000000-0000-0000-0000-000000000004',
        'authenticated',
        'authenticated',
        'user2@shopqueue.com',
        crypt (current_setting('my.app_password'), gen_salt ('bf')),
        NOW() - INTERVAL '15 days',
        NULL,
        NOW() - INTERVAL '4 days',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "user2",
          "full_name": "Regular User 2",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '15 days',
        NOW() - INTERVAL '15 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for each user using subquery from auth.users
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
ON CONFLICT (provider_id, provider) DO NOTHING;

--  ShopQueue Seed Data - Profiles
-- Created: 2025-06-19
-- Author: Marosdee Uma
-- Description: Sample profile data for testing ShopQueue application with multiple profiles per user

-- Insert profiles for admin user (2 profiles)
INSERT INTO public.profiles (
  id,
  auth_id,
  username,
  full_name,
  avatar_url,
  is_active,
  created_at,
  updated_at
)
VALUES
  (
    '10000000-1000-0000-0000-000000000002',
    '00000000-0000-0000-0000-000000000001',
    'admin_personal',
    'Admin Personal Account',
    '',
    FALSE,
    NOW() - INTERVAL '15 days',
    NOW() - INTERVAL '15 days'
  ),
  
  -- Insert profiles for regular user 1 (3 profiles)
  (
    '10000000-1000-0000-0000-000000000006',
    '00000000-0000-0000-0000-000000000003',
    'user1_gaming',
    'User1 Gaming Channel',
    '',
    FALSE,
    NOW() - INTERVAL '18 days',
    NOW() - INTERVAL '18 days'
  ),
  (
    '10000000-1000-0000-0000-000000000007',
    '00000000-0000-0000-0000-000000000003',
    'user1_movies',
    'User1 Movie Reviews',
    '',
    FALSE,
    NOW() - INTERVAL '15 days',
    NOW() - INTERVAL '15 days'
  ),
  
  -- Insert profiles for regular user 2 (2 profiles)
  (
    '10000000-1000-0000-0000-000000000009',
    '00000000-0000-0000-0000-000000000004',
    'user2_tech',
    'User2 Tech Channel',
    '',
    FALSE,
    NOW() - INTERVAL '10 days',
    NOW() - INTERVAL '10 days'
  )
ON CONFLICT (id) DO NOTHING;

-- Created at: 2025-06-21T10:15:00+07:00
-- Author: Marosdee Uma
-- Description: Seed initial profile_roles data for ShopQueue application

-- Insert initial admin role for the first user's active profile
-- This assumes the first user in auth.users is the system admin
INSERT INTO public.profile_roles (profile_id, role, granted_by)
SELECT 
  p.id, 
  'admin'::public.profile_role, 
  p.auth_id
FROM 
  public.profiles p
  JOIN auth.users u ON p.auth_id = u.id
WHERE
  p.is_active = true
ORDER BY u.created_at
LIMIT 1
ON CONFLICT (profile_id) DO UPDATE
SET role = 'admin'::public.profile_role;

-- Execute the migration function
SELECT public.migrate_profile_roles();


-- Insert categories
INSERT INTO public.categories (name, slug, icon, color, description, is_active, sort_order)
VALUES 
  ('‡∏ï‡∏±‡∏î‡∏ú‡∏°', 'haircut', '‚úÇÔ∏è', '#3B82F6', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏ú‡∏°‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏ú‡∏°', true, 1),
  ('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°', 'beauty', 'üíÑ', '#EC4899', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°', true, 2),
  ('‡∏ã‡πà‡∏≠‡∏°‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠', 'repair', 'üì±', '#10B981', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå', true, 3),
  ('‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£', 'restaurant', 'üçΩÔ∏è', '#F59E0B', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°', true, 4),
  ('‡∏™‡∏õ‡∏≤', 'spa', 'üßò', '#8B5CF6', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏õ‡∏≤‡πÅ‡∏•‡∏∞‡∏ô‡∏ß‡∏î', true, 5),
  ('‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î', 'tailor', 'üëï', '#06B6D4', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î‡πÄ‡∏¢‡πá‡∏ö', true, 6)
ON CONFLICT (slug) DO NOTHING;


-- Insert username: haircut_owner for shop owner
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    -- Shop owner user
    (
        '90000000-0000-0000-0000-000000000000',
        '90000000-0000-0000-0000-000000000001',
        'authenticated',
        'authenticated',
        'haircut_owner@example.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "haircut_owner",
          "full_name": "Shop Owner 1",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'haircut_owner@example.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: somchai for shop employee

INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    -- Shop owner user
    (
        '90000000-0000-0000-0000-000000000000',
        '90000000-0000-0000-0000-000000000002',
        'authenticated',
        'authenticated',
        'somchai@stylehair.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "somchai",
          "full_name": "‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'somchai@stylehair.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: somsri for shop employee

INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    -- Shop owner user
    (
        '90000000-0000-0000-0000-000000000000',
        '90000000-0000-0000-0000-000000000003',
        'authenticated',
        'authenticated',
        'somsri@stylehair.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "somsri",
          "full_name": "‡∏™‡∏°‡∏®‡∏£‡∏µ ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'somsri@stylehair.com'
ON CONFLICT (provider_id, provider) DO NOTHING;


-- Insert a single shop
INSERT INTO shops (
  owner_id,
  name,
  slug,
  description,
  address,
  phone,
  email,
  website,
  logo,
  qr_code_url,
  timezone,
  currency,
  language,
  status,
  created_at,
  updated_at
)
SELECT
  p.id AS owner_id,
  '‡∏£‡πâ‡∏≤‡∏ô‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏™‡πÑ‡∏ï‡∏•‡πå',
  'stylehair',
  '‡∏£‡πâ‡∏≤‡∏ô‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ä‡∏≤‡∏¢-‡∏´‡∏ç‡∏¥‡∏á ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô',
  '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
  '02-123-4567',
  'contact@stylehair.com',
  'https://stylehair.com',
  'https://example.com/logo.png',
  'https://example.com/qr.png',
  'Asia/Bangkok',
  'THB',
  'th',
  'active',
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM profiles p
WHERE p.username = 'haircut_owner'
LIMIT 1;

-- Link shop to categories
INSERT INTO category_shops (category_id, shop_id, created_at, updated_at)
SELECT 
  c.id AS category_id,
  s.id AS shop_id,
  NOW(),
  NOW()
FROM categories c
CROSS JOIN shops s
JOIN profiles p ON s.owner_id = p.id
WHERE c.slug = 'haircut'
AND p.username = 'haircut_owner';

-- Insert shop opening hours
INSERT INTO shop_opening_hours (shop_id, day_of_week, is_open, open_time, close_time, break_start, break_end, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  day_info.day_of_week,
  day_info.is_open,
  day_info.open_time,
  day_info.close_time,
  day_info.break_start,
  day_info.break_end,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('monday'::text, true, '09:00:00'::time, '18:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('tuesday'::text, true, '09:00:00'::time, '18:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('wednesday'::text, true, '09:00:00'::time, '18:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('thursday'::text, true, '09:00:00'::time, '18:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('friday'::text, true, '09:00:00'::time, '18:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('saturday'::text, true, '10:00:00'::time, '17:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('sunday'::text, false, NULL, NULL, NULL, NULL)
) AS day_info(day_of_week, is_open, open_time, close_time, break_start, break_end)
WHERE p.username = 'haircut_owner';

-- Insert services for the shop
INSERT INTO services (shop_id, name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  service_info.name,
  service_info.slug,
  service_info.description,
  service_info.price,
  service_info.estimated_duration,
  service_info.category,
  service_info.is_available,
  service_info.icon,
  service_info.popularity_rank,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ä‡∏≤‡∏¢'::text, 'haircut_men'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏ö‡∏∏‡∏£‡∏∏‡∏©'::text, 200.00::numeric, 30::integer, 'haircut'::text, true::boolean, '‚úÇÔ∏è'::text, 1::integer),
    ('‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏´‡∏ç‡∏¥‡∏á'::text, 'haircut_women'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏™‡∏ï‡∏£‡∏µ'::text, 300.00::numeric, 45::integer, 'haircut'::text, true::boolean, '‚úÇÔ∏è'::text, 2::integer),
    ('‡∏™‡∏£‡∏∞‡πÑ‡∏î‡∏£‡πå'::text, 'wash_and_dry'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏£‡∏∞‡∏ú‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πà‡∏≤‡πÅ‡∏´‡πâ‡∏á'::text, 150.00::numeric, 20::integer, 'wash_and_dry'::text, true::boolean, 'üíß'::text, 3::integer),
    ('‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°'::text, 'coloring'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°'::text, 1500.00::numeric, 120::integer, 'coloring'::text, true::boolean, 'üé®'::text, 4::integer),
    ('‡∏î‡∏±‡∏î‡∏ú‡∏°'::text, 'styling'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏±‡∏î‡∏ú‡∏°'::text, 1200.00::numeric, 90::integer, 'styling'::text, true::boolean, 'üåÄ'::text, 5::integer)
) AS service_info(name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank)
WHERE p.username = 'haircut_owner';

-- Insert departments
INSERT INTO departments (shop_id, name, slug, description, employee_count, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  dept_info.name,
  dept_info.slug,
  dept_info.description,
  dept_info.employee_count,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ï‡∏±‡∏î‡∏ú‡∏°'::text, 'haircut'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ï‡∏±‡∏î‡∏ú‡∏°'::text, 3::integer),
    ('‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°'::text, 'coloring'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°'::text, 2::integer),
    ('‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö'::text, 'welcome'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö'::text, 1::integer)
) AS dept_info(name, slug, description, employee_count)
WHERE p.username = 'haircut_owner';

-- Insert employees
INSERT INTO employees (
  shop_id,
  profile_id,
  employee_code,
  name,
  email,
  phone,
  position_text,
  department_id,
  salary,
  hire_date,
  status,
  station_number,
  is_on_duty,
  last_login,
  permissions,
  notes,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  p.id AS profile_id,
  emp_info.employee_code,
  emp_info.name,
  emp_info.email,
  emp_info.phone,
  emp_info.position_text,
  d.id AS department_id,
  emp_info.salary,
  emp_info.hire_date,
  emp_info.status::public.employee_status,
  emp_info.station_number,
  emp_info.is_on_duty,
  emp_info.last_login,
  emp_info.permissions,
  emp_info.notes,
  emp_info.created_at,
  emp_info.updated_at
FROM shops s
JOIN profiles p1 ON s.owner_id = p1.id
CROSS JOIN (
  VALUES 
    ('EMP001', 'somchai', '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ', 'somchai@stylehair.com', '081-234-5678', '‡∏ä‡πà‡∏≤‡∏á‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™', 25000.00, '2023-01-15'::date, 'active', 1, true, NOW() - INTERVAL '1 day', ARRAY['manage_queues','manage_employees','manage_services','manage_customers','manage_settings'], '‡∏ä‡πà‡∏≤‡∏á‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 10 ‡∏õ‡∏µ', NOW() - INTERVAL '12 months', NOW()),
    ('EMP002', 'somsri', '‡∏™‡∏°‡∏®‡∏£‡∏µ ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç', 'somsri@stylehair.com', '082-345-6789', '‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°', 22000.00, '2024-02-01'::date, 'active', 2, true, NOW() - INTERVAL '2 days', ARRAY['manage_customers','manage_services'], '‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏µ‡∏ú‡∏°‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô', NOW() - INTERVAL '10 months', NOW())
) AS emp_info(employee_code, username, name, email, phone, position_text, salary, hire_date, status, station_number, is_on_duty, last_login, permissions, notes, created_at, updated_at)
JOIN profiles p ON p.username = emp_info.username
JOIN departments d ON d.shop_id = s.id AND d.name = CASE 
  WHEN emp_info.position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™' THEN '‡∏ï‡∏±‡∏î‡∏ú‡∏°'
  WHEN emp_info.position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°' THEN '‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°'
  ELSE '‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö'
END
WHERE p1.username = 'haircut_owner';


-- Insert customers
INSERT INTO customers (
  shop_id,
  name,
  phone,
  email,
  date_of_birth,
  gender,
  address,
  notes,
  last_visit,
  is_active,
  profile_id,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  cust_info.name,
  cust_info.phone,
  cust_info.email,
  cust_info.date_of_birth,
  cust_info.gender,
  cust_info.address,
  cust_info.notes,
  cust_info.last_visit,
  cust_info.is_active,
  cust_info.profile_id,
  cust_info.created_at,
  cust_info.updated_at
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢'::text, '083-456-7890'::text, 'wichai@example.com'::text, '1990-05-15'::date, 'male'::text, '456 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏ä‡∏≠‡∏ö‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ó‡∏£‡∏á‡∏™‡∏±‡πâ‡∏ô'::text, NOW() - INTERVAL '7 days', true::boolean, NULL::uuid, NOW() - INTERVAL '6 months', NOW() - INTERVAL '7 days'),
    ('‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°'::text, '084-567-8901'::text, 'somying@example.com'::text, '1995-08-20'::date, 'female'::text, '789 ‡∏ñ‡∏ô‡∏ô‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏ä‡∏≠‡∏ö‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°‡πÇ‡∏ó‡∏ô‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•'::text, NOW() - INTERVAL '14 days', true::boolean, NULL::uuid, NOW() - INTERVAL '5 months', NOW() - INTERVAL '14 days')
) AS cust_info(name, phone, email, date_of_birth, gender, address, notes, last_visit, is_active, profile_id, created_at, updated_at)
WHERE p.username = 'haircut_owner';

-- Insert queues
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name,
    c.notes
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
),
employee_data AS (
  SELECT 
    e.id AS employee_id,
    e.position_text
  FROM employees e
  JOIN shop_data sd ON e.shop_id = sd.shop_id
)
INSERT INTO queues (
  shop_id,
  customer_id,
  queue_number,
  status,
  priority,
  estimated_duration,
  estimated_call_time,
  served_by_employee_id,
  note,
  feedback,
  rating,
  created_at,
  updated_at,
  served_at,
  completed_at
)
SELECT
  sd.shop_id,
  CASE 
    WHEN q.queue_number IN ('A001', 'A003') THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢')
    WHEN q.queue_number = 'A002' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°')
  END AS customer_id,
  q.queue_number,
  q.status,
  q.priority,
  q.estimated_duration,
  q.estimated_call_time,
  CASE 
    WHEN q.queue_number = 'A001' THEN (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™')
    WHEN q.queue_number = 'A002' THEN (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°')
    ELSE NULL
  END AS served_by_employee_id,
  q.note,
  q.feedback,
  q.rating,
  q.created_at,
  q.updated_at,
  q.served_at,
  q.completed_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('A001'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 30::integer, NOW() - INTERVAL '7 days' + INTERVAL '30 minutes', '‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ó‡∏£‡∏á‡∏™‡∏±‡πâ‡∏ô'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏°‡∏≤‡∏Å'::text, 5::integer, NOW() - INTERVAL '7 days', NOW() - INTERVAL '7 days' + INTERVAL '1 hour', NOW() - INTERVAL '7 days' + INTERVAL '30 minutes', NOW() - INTERVAL '7 days' + INTERVAL '1 hour'),
    ('A002'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 120::integer, NOW() - INTERVAL '14 days' + INTERVAL '30 minutes', '‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°‡πÇ‡∏ó‡∏ô‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•'::text, '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ'::text, 4::integer, NOW() - INTERVAL '14 days', NOW() - INTERVAL '14 days' + INTERVAL '2 hours', NOW() - INTERVAL '14 days' + INTERVAL '30 minutes', NOW() - INTERVAL '14 days' + INTERVAL '2 hours'),
    ('A003'::text, 'waiting'::public.queue_status, 'normal'::public.queue_priority, 30::integer, NOW() + INTERVAL '30 minutes', '‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ó‡∏£‡∏á‡∏™‡∏±‡πâ‡∏ô'::text, NULL::text, NULL::integer, NOW() - INTERVAL '30 minutes', NOW() - INTERVAL '30 minutes', NULL::timestamp, NULL::timestamp)
) AS q(queue_number, status, priority, estimated_duration, estimated_call_time, note, feedback, rating, created_at, updated_at, served_at, completed_at);

-- Insert queue services
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
),
queue_data AS (
  SELECT 
    q.id AS queue_id,
    q.queue_number,
    q.created_at
  FROM queues q
  JOIN shop_data sd ON q.shop_id = sd.shop_id
),
service_data AS (
  SELECT 
    s.id AS service_id,
    s.name,
    s.price
  FROM services s
  JOIN shop_data sd ON s.shop_id = sd.shop_id
)
INSERT INTO queue_services (
  queue_id,
  service_id,
  quantity,
  price,
  created_at
)
SELECT
  qd.queue_id,
  CASE 
    WHEN qd.queue_number IN ('A001', 'A003') THEN (SELECT service_id FROM service_data WHERE name = '‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ä‡∏≤‡∏¢')
    WHEN qd.queue_number = 'A002' THEN (SELECT service_id FROM service_data WHERE name = '‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°')
  END AS service_id,
  1 AS quantity,
  CASE 
    WHEN qd.queue_number IN ('A001', 'A003') THEN 200.00
    WHEN qd.queue_number = 'A002' THEN 1500.00
  END AS price,
  qd.created_at
FROM queue_data qd;

-- Insert payments
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
),
queue_data AS (
  SELECT 
    q.id AS queue_id,
    q.queue_number,
    q.completed_at
  FROM queues q
  JOIN shop_data sd ON q.shop_id = sd.shop_id
  WHERE q.status = 'completed'::public.queue_status
),
employee_data AS (
  SELECT 
    e.id AS employee_id,
    e.position_text
  FROM employees e
  JOIN shop_data sd ON e.shop_id = sd.shop_id
)
INSERT INTO payments (
  queue_id,
  total_amount,
  paid_amount,
  payment_status,
  payment_method,
  processed_by_employee_id,
  payment_date,
  created_at,
  updated_at
)
SELECT
  qd.queue_id,
  CASE 
    WHEN qd.queue_number = 'A001' THEN 200.00
    WHEN qd.queue_number = 'A002' THEN 1500.00
  END AS total_amount,
  CASE 
    WHEN qd.queue_number = 'A001' THEN 200.00
    WHEN qd.queue_number = 'A002' THEN 1500.00
  END AS paid_amount,
  'paid'::public.payment_status AS payment_status,
  CASE 
    WHEN qd.queue_number = 'A001' THEN 'cash'::public.payment_method
    WHEN qd.queue_number = 'A002' THEN 'card'::public.payment_method
  END AS payment_method,
  CASE 
    WHEN qd.queue_number = 'A001' THEN (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™')
    WHEN qd.queue_number = 'A002' THEN (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°')
  END AS processed_by_employee_id,
  qd.completed_at,
  qd.completed_at,
  qd.completed_at
FROM queue_data qd
WHERE qd.queue_number IN ('A001', 'A002');

-- Insert payment items
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
),
service_data AS (
  SELECT 
    s.id AS service_id,
    s.name,
    s.price
  FROM services s
  JOIN shop_data sd ON s.shop_id = sd.shop_id
),
payment_data AS (
  SELECT 
    p.id AS payment_id,
    p.queue_id,
    p.created_at
  FROM payments p
  JOIN queues q ON p.queue_id = q.id
  JOIN shop_data sd ON q.shop_id = sd.shop_id
),
queue_data AS (
  SELECT 
    q.id AS queue_id,
    q.queue_number
  FROM queues q
  JOIN shop_data sd ON q.shop_id = sd.shop_id
)
INSERT INTO payment_items (
  payment_id,
  service_id,
  name,
  price,
  quantity,
  total,
  created_at
)
SELECT
  pd.payment_id,
  CASE 
    WHEN qd.queue_number = 'A001' THEN (SELECT service_id FROM service_data WHERE name = '‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ä‡∏≤‡∏¢')
    WHEN qd.queue_number = 'A002' THEN (SELECT service_id FROM service_data WHERE name = '‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°')
  END AS service_id,
  CASE 
    WHEN qd.queue_number = 'A001' THEN '‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ä‡∏≤‡∏¢'
    WHEN qd.queue_number = 'A002' THEN '‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°'
  END AS name,
  CASE 
    WHEN qd.queue_number = 'A001' THEN 200.00
    WHEN qd.queue_number = 'A002' THEN 1500.00
  END AS price,
  1 AS quantity,
  CASE 
    WHEN qd.queue_number = 'A001' THEN 200.00
    WHEN qd.queue_number = 'A002' THEN 1500.00
  END AS total,
  pd.created_at
FROM payment_data pd
JOIN queue_data qd ON pd.queue_id = qd.queue_id
WHERE qd.queue_number IN ('A001', 'A002');

-- Insert shop settings
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
)
INSERT INTO shop_settings (
  shop_id,
  max_queue_size,
  estimated_service_time,
  allow_advance_booking,
  booking_window_hours,
  auto_confirm_queues,
  cancellation_deadline,
  maintenance_mode,
  allow_registration,
  require_email_verification,
  session_timeout,
  backup_frequency,
  log_level,
  data_retention_days,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  50,
  30,
  true,
  48,
  true,
  30,
  false,
  true,
  false,
  30,
  'daily',
  'info',
  90,
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM shop_data sd;

-- Insert notification settings
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
)
INSERT INTO notification_settings (
  shop_id,
  email_notifications,
  sms_notifications,
  push_notifications,
  new_queue,
  queue_update,
  shift_reminder,
  system_alerts,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  true AS email_notifications,
  false AS sms_notifications,
  true AS push_notifications,
  true AS new_queue,
  true AS queue_update,
  true AS shift_reminder,
  true AS system_alerts,
  NOW() - INTERVAL '12 months' AS created_at,
  NOW() - INTERVAL '1 day' AS updated_at
FROM shop_data sd;

-- Insert customer points
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name,
    c.last_visit
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
)
INSERT INTO customer_points (
  shop_id,
  customer_id,
  current_points,
  total_earned,
  total_redeemed,
  membership_tier,
  tier_benefits,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  cd.customer_id,
  CASE 
    WHEN cd.name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' THEN 50
    WHEN cd.name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN 150
  END AS current_points,
  CASE 
    WHEN cd.name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' THEN 50
    WHEN cd.name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN 150
  END AS total_earned,
  0 AS total_redeemed,
  CASE 
    WHEN cd.name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' THEN 'bronze'::public.membership_tier
    WHEN cd.name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN 'silver'::public.membership_tier
  END AS membership_tier,
  CASE 
    WHEN cd.name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' THEN ARRAY['5% discount', 'Birthday gift']
    WHEN cd.name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN ARRAY['10% discount', 'Birthday gift', 'Priority booking']
  END AS tier_benefits,
  CASE 
    WHEN cd.name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' THEN NOW() - INTERVAL '6 months'
    WHEN cd.name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN NOW() - INTERVAL '5 months'
  END AS created_at,
  cd.last_visit AS updated_at
FROM shop_data sd
CROSS JOIN customer_data cd
WHERE cd.name IN ('‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢', '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°');

-- Insert customer point transactions
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name,
    c.last_visit
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
),
queue_data AS (
  SELECT 
    q.id AS queue_id,
    q.queue_number,
    q.customer_id,
    q.completed_at
  FROM queues q
  JOIN shop_data sd ON q.shop_id = sd.shop_id
),
customer_points_data AS (
  SELECT 
    cp.id AS customer_point_id,
    cp.customer_id,
    c.name AS customer_name
  FROM customer_points cp
  JOIN customers c ON cp.customer_id = c.id
  JOIN shop_data sd ON cp.shop_id = sd.shop_id
)
INSERT INTO customer_point_transactions (
  customer_point_id,
  type,
  points,
  description,
  related_queue_id,
  metadata,
  transaction_date,
  created_at
)
SELECT
  cpd.customer_point_id,
  'earned'::public.transaction_type as type,
  CASE 
    WHEN cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' AND trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£' THEN 20
    WHEN cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' AND trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô' THEN 30
    WHEN cpd.customer_name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN 150
  END AS points,
  trans_data.description,
  CASE 
    WHEN trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£' THEN (
      SELECT qd.queue_id FROM queue_data qd 
      WHERE qd.customer_id = cpd.customer_id 
      AND qd.queue_number = CASE 
        WHEN cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' THEN 'A001'
        WHEN cpd.customer_name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN 'A002'
      END
      LIMIT 1
    )
    ELSE NULL
  END AS related_queue_id,
  CASE 
    WHEN trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£' AND cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' THEN '{"service": "‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ä‡∏≤‡∏¢"}'::jsonb
    WHEN trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô' THEN (
      SELECT format('{"referral": "%s"}', c2.id::text)::jsonb
      FROM customers c2
      JOIN shop_data sd ON c2.shop_id = sd.shop_id
      WHERE c2.name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°'
      LIMIT 1
    )
    WHEN trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£' AND cpd.customer_name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN '{"service": "‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏°"}'::jsonb
  END AS metadata,
  CASE 
    WHEN cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' AND trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£' THEN NOW() - INTERVAL '7 days' + INTERVAL '1 hour'
    WHEN cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' AND trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô' THEN NOW() - INTERVAL '30 days'
    WHEN cpd.customer_name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN NOW() - INTERVAL '14 days' + INTERVAL '2 hours'
  END AS transaction_date,
  CASE 
    WHEN cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' AND trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£' THEN NOW() - INTERVAL '7 days' + INTERVAL '1 hour'
    WHEN cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢' AND trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô' THEN NOW() - INTERVAL '30 days'
    WHEN cpd.customer_name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' THEN NOW() - INTERVAL '14 days' + INTERVAL '2 hours'
  END AS created_at
FROM customer_points_data cpd
CROSS JOIN (
  VALUES 
    ('‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'::text),
    ('‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô'::text)
) AS trans_data(description)
WHERE 
  (cpd.customer_name = '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢') OR
  (cpd.customer_name = '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÉ‡∏à‡∏á‡∏≤‡∏°' AND trans_data.description = '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£');

-- Insert rewards
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'haircut_owner'
  LIMIT 1
)
INSERT INTO rewards (
  shop_id,
  name,
  description,
  type,
  points_required,
  value,
  is_available,
  expiry_days,
  usage_limit,
  icon,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  reward_info.name,
  reward_info.description,
  reward_info.type,
  reward_info.points_required,
  reward_info.value,
  reward_info.is_available,
  reward_info.expiry_days,
  reward_info.usage_limit,
  reward_info.icon,
  NOW() - INTERVAL '12 months' AS created_at,
  NOW() - INTERVAL '1 day' AS updated_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ'::text, 'discount'::public.reward_type, 100::integer, 10.00::numeric, true::boolean, 90::integer, 1::integer, 'üè∑Ô∏è'::text),
    ('‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ü‡∏£‡∏µ'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏£‡∏∞‡πÑ‡∏î‡∏£‡πå‡∏ü‡∏£‡∏µ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á'::text, 'free_item'::public.reward_type, 200::integer, 150.00::numeric, true::boolean, 90::integer, 1::integer, 'üéÅ'::text)
) AS reward_info(name, description, type, points_required, value, is_available, expiry_days, usage_limit, icon);

-- Insert username: restaurant_owner for restaurant owner
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    -- Restaurant owner user
    (
        '91000000-0000-0000-0000-000000000000',
        '91000000-0000-0000-0000-000000000001',
        'authenticated',
        'authenticated',
        'restaurant_owner@example.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "restaurant_owner",
          "full_name": "Restaurant Owner",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'restaurant_owner@example.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: chef for restaurant employee
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    -- Restaurant employee user
    (
        '91000000-0000-0000-0000-000000000000',
        '91000000-0000-0000-0000-000000000002',
        'authenticated',
        'authenticated',
        'chef@thaidelicious.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "chef",
          "full_name": "‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå ‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏Å‡πà‡∏á",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'chef@thaidelicious.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: waiter for restaurant employee
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    -- Restaurant employee user
    (
        '91000000-0000-0000-0000-000000000000',
        '91000000-0000-0000-0000-000000000003',
        'authenticated',
        'authenticated',
        'waiter@thaidelicious.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "waiter",
          "full_name": "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏°‡πÉ‡∏à ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'waiter@thaidelicious.com'
ON CONFLICT (provider_id, provider) DO NOTHING;


-- Insert a single restaurant shop
INSERT INTO shops (
  owner_id,
  name,
  slug,
  description,
  address,
  phone,
  email,
  website,
  logo,
  qr_code_url,
  timezone,
  currency,
  language,
  status,
  created_at,
  updated_at
)
SELECT
  p.id AS owner_id,
  '‡∏Ñ‡∏£‡∏±‡∏ß‡πÑ‡∏ó‡∏¢‡∏≠‡∏£‡πà‡∏≠‡∏¢',
  'restaurant',
  '‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏° ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô',
  '456 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏µ‡∏•‡∏° ‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏µ‡∏•‡∏° ‡πÄ‡∏Ç‡∏ï‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10500',
  '02-987-6543',
  'contact@thaidelicious.com',
  'https://thaidelicious.com',
  'https://example.com/restaurant-logo.png',
  'https://example.com/restaurant-qr.png',
  'Asia/Bangkok',
  'THB',
  'th',
  'active',
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM profiles p
WHERE p.username = 'restaurant_owner'
LIMIT 1;

-- Link shop to categories
INSERT INTO category_shops (category_id, shop_id, created_at, updated_at)
SELECT 
  c.id AS category_id,
  s.id AS shop_id,
  NOW(),
  NOW()
FROM categories c
CROSS JOIN shops s
JOIN profiles p ON s.owner_id = p.id
WHERE c.slug = 'restaurant'
AND p.username = 'restaurant_owner';

-- Insert shop opening hours
INSERT INTO shop_opening_hours (shop_id, day_of_week, is_open, open_time, close_time, break_start, break_end, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  day_info.day_of_week,
  day_info.is_open,
  day_info.open_time,
  day_info.close_time,
  day_info.break_start,
  day_info.break_end,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('monday'::text, true, '10:00:00'::time, '22:00:00'::time, '15:00:00'::time, '16:00:00'::time),
    ('tuesday'::text, true, '10:00:00'::time, '22:00:00'::time, '15:00:00'::time, '16:00:00'::time),
    ('wednesday'::text, true, '10:00:00'::time, '22:00:00'::time, '15:00:00'::time, '16:00:00'::time),
    ('thursday'::text, true, '10:00:00'::time, '22:00:00'::time, '15:00:00'::time, '16:00:00'::time),
    ('friday'::text, true, '10:00:00'::time, '23:00:00'::time, '15:00:00'::time, '16:00:00'::time),
    ('saturday'::text, true, '10:00:00'::time, '23:00:00'::time, '15:00:00'::time, '16:00:00'::time),
    ('sunday'::text, true, '10:00:00'::time, '22:00:00'::time, '15:00:00'::time, '16:00:00'::time)
) AS day_info(day_of_week, is_open, open_time, close_time, break_start, break_end)
WHERE p.username = 'restaurant_owner';

-- Insert restaurant services (menu items)
INSERT INTO services (shop_id, name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank, created_at, updated_at)
SELECT
  s.id AS shop_id,
  service_info.name,
  service_info.slug,
  service_info.description,
  service_info.price,
  service_info.estimated_duration,
  service_info.category,
  service_info.is_available,
  service_info.icon,
  service_info.popularity_rank,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES
    -- Main dishes
    ('‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î'::text, 'pad-thai-guang-shi'::text, '‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î‡∏£‡∏™‡πÄ‡∏î‡πá‡∏î ‡πÄ‡∏™‡πâ‡∏ô‡∏ô‡∏∏‡πà‡∏° ‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏ç‡πà'::text, 120.00, 15, 'main_dish'::text, true, 'food'::text, 1),
    ('‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á'::text, 'tom-yam-guang-shi'::text, '‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á‡∏ô‡πâ‡∏≥‡∏Ç‡πâ‡∏ô ‡∏£‡∏™‡∏à‡∏±‡∏î‡∏à‡πâ‡∏≤‡∏ô ‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏ç‡πà'::text, 180.00, 15, 'main_dish'::text, true, 'soup'::text, 2),
    ('‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡πÑ‡∏Å‡πà'::text, 'green-curry-chicken'::text, '‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡πÑ‡∏Å‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ô‡∏∏‡πà‡∏° ‡∏ô‡πâ‡∏≥‡πÅ‡∏Å‡∏á‡∏Ç‡πâ‡∏ô ‡∏´‡∏≠‡∏°‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÉ‡∏ö‡πÇ‡∏´‡∏£‡∏∞‡∏û‡∏≤'::text, 150.00, 15, 'main_dish'::text, true, 'curry'::text, 3),
    ('‡∏ú‡∏±‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏´‡∏°‡∏π‡∏Å‡∏£‡∏≠‡∏ö'::text, 'pad-krapao-moo-krob'::text, '‡∏ú‡∏±‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏´‡∏°‡∏π‡∏Å‡∏£‡∏≠‡∏ö ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡∏à‡∏±‡∏î‡∏à‡πâ‡∏≤‡∏ô ‡πÄ‡∏ú‡πá‡∏î‡∏£‡πâ‡∏≠‡∏ô'::text, 120.00, 10, 'main_dish'::text, true, 'food'::text, 4),
    ('‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏õ‡∏π'::text, 'pad-pao-poo'::text, '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏õ‡∏π‡∏Å‡πâ‡∏≠‡∏ô‡πÉ‡∏´‡∏ç‡πà ‡∏´‡∏≠‡∏°‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÉ‡∏ö‡∏°‡∏∞‡∏Å‡∏£‡∏π‡∏î'::text, 160.00, 15, 'main_dish'::text, true, 'rice'::text, 5),
    ('‡∏™‡πÄ‡∏ï‡πá‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤'::text, 'steak-nam-khao'::text, '‡∏™‡πÄ‡∏ï‡πá‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏° ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ã‡∏≠‡∏™‡πÅ‡∏•‡∏∞‡∏ú‡∏±‡∏Å‡∏¢‡πà‡∏≤‡∏á'::text, 450.00, 25, 'main_dish'::text, true, 'steak'::text, 6),
    
    -- Appetizers
    ('‡∏õ‡∏≠‡πÄ‡∏õ‡∏µ‡πä‡∏¢‡∏∞‡∏ó‡∏≠‡∏î'::text, 'pad-pao-yao-thai'::text, '‡∏õ‡∏≠‡πÄ‡∏õ‡∏µ‡πä‡∏¢‡∏∞‡∏ó‡∏≠‡∏î‡∏Å‡∏£‡∏≠‡∏ö ‡πÑ‡∏™‡πâ‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ú‡∏±‡∏Å ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ô‡πâ‡∏≥‡∏à‡∏¥‡πâ‡∏°‡∏£‡∏™‡∏´‡∏ß‡∏≤‡∏ô'::text, 80.00, 10, 'appetizer'::text, true, 'appetizer'::text, 7),
    ('‡∏¢‡∏≥‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô'::text, 'yum-wun-sean'::text, '‡∏¢‡∏≥‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î ‡∏£‡∏™‡πÄ‡∏õ‡∏£‡∏µ‡πâ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡πÄ‡∏ú‡πá‡∏î'::text, 120.00, 15, 'appetizer'::text, true, 'salad'::text, 8),
    ('‡∏™‡πâ‡∏°‡∏ï‡∏≥‡πÑ‡∏ó‡∏¢'::text, 'som-tam-thai'::text, '‡∏™‡πâ‡∏°‡∏ï‡∏≥‡πÑ‡∏ó‡∏¢‡∏£‡∏™‡∏à‡∏±‡∏î‡∏à‡πâ‡∏≤‡∏ô ‡πÉ‡∏™‡πà‡∏ñ‡∏±‡πà‡∏ß‡∏•‡∏¥‡∏™‡∏á‡∏ö‡∏î ‡∏Å‡∏∏‡πâ‡∏á‡πÅ‡∏´‡πâ‡∏á'::text, 90.00, 10, 'appetizer'::text, true, 'salad'::text, 9),
    
    -- Drinks
    ('‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß'::text, 'nam-manao'::text, '‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡∏™‡∏î‡∏Ñ‡∏±‡πâ‡∏ô ‡∏´‡∏ß‡∏≤‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏ô‡πÉ‡∏à'::text, 50.00, 5, 'drink'::text, true, 'juice'::text, 10),
    ('‡∏ä‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏¢‡πá‡∏ô'::text, 'cha-thai-yen'::text, '‡∏ä‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏¢‡πá‡∏ô‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô ‡∏´‡∏≠‡∏°‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏ä‡∏≤'::text, 45.00, 5, 'drink'::text, true, 'tea'::text, 11),
    ('‡∏Å‡∏≤‡πÅ‡∏ü‡∏î‡∏≥‡πÄ‡∏¢‡πá‡∏ô'::text, 'coffee-black-yen'::text, '‡∏Å‡∏≤‡πÅ‡∏ü‡∏î‡∏≥‡πÄ‡∏¢‡πá‡∏ô ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô'::text, 45.00, 5, 'drink'::text, true, 'coffee'::text, 12),
    
    -- Desserts
    ('‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á'::text, 'nam-maow-mang'::text, '‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á‡∏´‡∏ß‡∏≤‡∏ô‡∏°‡∏±‡∏ô ‡∏£‡∏≤‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏∞‡∏ó‡∏¥‡∏™‡∏î'::text, 90.00, 10, 'dessert'::text, true, 'dessert'::text, 13),
    ('‡∏ó‡∏±‡∏ö‡∏ó‡∏¥‡∏°‡∏Å‡∏£‡∏≠‡∏ö'::text, 'tap-tim-grab'::text, '‡∏ó‡∏±‡∏ö‡∏ó‡∏¥‡∏°‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏¢‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏ô‡πÉ‡∏à ‡∏£‡∏≤‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏∞‡∏ó‡∏¥‡∏™‡∏î'::text, 70.00, 10, 'dessert'::text, true, 'dessert'::text, 14),
    ('‡πÑ‡∏≠‡∏®‡∏Å‡∏£‡∏µ‡∏°‡∏Å‡∏∞‡∏ó‡∏¥'::text, 'ice-cream-kati'::text, '‡πÑ‡∏≠‡∏®‡∏Å‡∏£‡∏µ‡∏°‡∏Å‡∏∞‡∏ó‡∏¥‡∏™‡∏î‡∏£‡∏™‡∏´‡∏≠‡∏°‡∏°‡∏±‡∏ô ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ñ‡∏±‡πà‡∏ß‡∏•‡∏¥‡∏™‡∏á‡∏Ñ‡∏±‡πà‡∏ß'::text, 60.00, 5, 'dessert'::text, true, 'ice_cream'::text, 15)
) AS service_info(name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank)
WHERE p.username = 'restaurant_owner';

-- Insert departments for the restaurant
INSERT INTO departments (shop_id, name, slug, description, created_at, updated_at)
SELECT
  s.id AS shop_id,
  dept_info.name,
  dept_info.slug,
  dept_info.description,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES
    ('‡∏Ñ‡∏£‡∏±‡∏ß'::text, 'crew'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏Ñ‡∏£‡∏±‡∏ß ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∏‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'::text),
    ('‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'::text, 'service'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏≠‡∏≤‡∏´‡∏≤‡∏£'::text),
    ('‡∏ö‡∏≤‡∏£‡πå'::text, 'bar'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ö‡∏≤‡∏£‡πå ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡πá‡∏≠‡∏Å‡πÄ‡∏ó‡∏•'::text)
) AS dept_info(name, slug, description)
WHERE p.username = 'restaurant_owner';

-- Insert employees for the restaurant
INSERT INTO employees (
  shop_id,
  profile_id,
  employee_code,
  name,
  email,
  phone,
  position_text,
  department_id,
  salary,
  hire_date,
  status,
  station_number,
  is_on_duty,
  last_login,
  permissions,
  notes,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  p_emp.id AS profile_id,
  emp_info.employee_code,
  p_emp.full_name AS name,
  emp_info.email,
  emp_info.phone,
  emp_info.position_text,
  d.id AS department_id,
  emp_info.salary,
  NOW() - emp_info.employed_days * INTERVAL '1 day' AS hire_date,
  'active'::public.employee_status AS status,
  emp_info.station_number,
  true AS is_on_duty,
  NOW() - INTERVAL '1 day' AS last_login,
  emp_info.permissions,
  emp_info.notes,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
JOIN departments d ON d.shop_id = s.id
CROSS JOIN (
  VALUES
    ('chef'::text, 'chef@restaurant.com', '0812345678'::text, 'EMP001'::text, '‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ä‡∏ü'::text, 35000.00, 180, 1::integer, ARRAY['manage_queues','manage_employees','manage_services','manage_customers','manage_settings']::text[], '‡πÄ‡∏ä‡∏ü‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏£‡πâ‡∏≤‡∏ô ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå 10 ‡∏õ‡∏µ'::text, '‡∏Ñ‡∏£‡∏±‡∏ß'::text),
    ('waiter'::text, 'waiter@restaurant.com', '0812345678'::text, 'EMP002'::text, '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü'::text, 18000.00, 90, 2::integer, ARRAY['manage_queues','manage_employees','manage_services','manage_customers','manage_settings']::text[], '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏à‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'::text)
) AS emp_info(username, email, phone, employee_code, position_text, salary, employed_days, station_number, permissions, notes, department)
JOIN profiles p_emp ON p_emp.username = emp_info.username
WHERE p.username = 'restaurant_owner'
AND d.name = emp_info.department;

-- Insert customers for the restaurant
INSERT INTO customers (
  shop_id,
  name,
  phone,
  email,
  date_of_birth,
  gender,
  address,
  notes,
  last_visit,
  is_active,
  profile_id,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  customer_info.name,
  customer_info.phone,
  customer_info.email,
  customer_info.date_of_birth,
  customer_info.gender,
  customer_info.address,
  customer_info.notes,
  customer_info.last_visit,
  customer_info.is_active,
  p_cust.id AS profile_id,
  NOW() - INTERVAL '3 months',
  NOW() - INTERVAL '1 day'
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES
    ('customer1'::text, '‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ'::text, '0891234567'::text, 'somchai@example.com'::text, '1985-06-15'::date, 'male'::text, '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ‡∏ä‡∏≠‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏™‡∏à‡∏±‡∏î'::text, NOW() - INTERVAL '7 days', true::boolean),
    ('customer2'::text, '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏£‡∏±‡∏Å‡∏™‡∏ß‡∏¢'::text, '0891234568'::text, 'somying@example.com'::text, '1990-03-20'::date, 'female'::text, '456 ‡∏ñ‡∏ô‡∏ô‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡πÅ‡∏û‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏∞‡πÄ‡∏•'::text, NOW() - INTERVAL '14 days', true::boolean),
    ('customer3'::text, '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏°‡∏±‡πà‡∏á‡∏°‡∏µ'::text, '0891234569'::text, 'wichai@example.com'::text, '1978-11-05'::date, 'male'::text, '789 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏µ‡∏•‡∏° ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏ä‡∏≠‡∏ö‡πÇ‡∏ï‡πä‡∏∞‡∏£‡∏¥‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á'::text, NOW() - INTERVAL '30 days', true::boolean)
) AS customer_info(username, name, phone, email, date_of_birth, gender, address, notes, last_visit, is_active)
LEFT JOIN profiles p_cust ON p_cust.username = customer_info.username
WHERE p.username = 'restaurant_owner';

-- Insert queues for the restaurant
INSERT INTO queues (
  shop_id,
  customer_id,
  queue_number,
  status,
  priority,
  estimated_duration,
  estimated_call_time,
  served_by_employee_id,
  note,
  feedback,
  rating,
  created_at,
  updated_at,
  served_at,
  completed_at
)
SELECT
  s.id AS shop_id,
  c.id AS customer_id,
  queue_info.queue_number,
  queue_info.status::public.queue_status,
  'normal'::public.queue_priority AS priority,
  queue_info.estimated_duration,
  NOW() - queue_info.minutes_ago * INTERVAL '1 minute' + INTERVAL '30 minutes' AS estimated_call_time,
  CASE 
    WHEN queue_info.status = 'completed' OR queue_info.status = 'in_progress' THEN 
      (SELECT e.id FROM employees e WHERE e.shop_id = s.id AND e.position_text = '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü' LIMIT 1)
    ELSE NULL
  END AS served_by_employee_id,
  queue_info.note,
  queue_info.feedback,
  queue_info.rating,
  NOW() - queue_info.minutes_ago * INTERVAL '1 minute',
  NOW() - queue_info.minutes_ago * INTERVAL '1 minute',
  CASE 
    WHEN queue_info.status = 'completed' OR queue_info.status = 'in_progress' THEN 
      NOW() - queue_info.minutes_ago * INTERVAL '1 minute' + INTERVAL '15 minutes'
    ELSE NULL
  END AS served_at,
  CASE 
    WHEN queue_info.status = 'completed' THEN 
      NOW() - queue_info.minutes_ago * INTERVAL '1 minute' + INTERVAL '1 hour'
    ELSE NULL
  END AS completed_at
FROM shops s
JOIN profiles p ON s.owner_id = p.id
JOIN customers c ON c.shop_id = s.id
JOIN profiles p_cust ON p_cust.id = c.profile_id
CROSS JOIN (
  VALUES
    ('customer1'::text, 'R001'::text, 'completed'::text, '‡πÇ‡∏ï‡πä‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 4 ‡∏ó‡πà‡∏≤‡∏ô'::text, 60, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏°‡∏≤‡∏Å'::text, 5::integer, 120),
    ('customer2'::text, 'R002'::text, 'in_progress'::text, '‡πÇ‡∏ï‡πä‡∏∞‡∏£‡∏¥‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á'::text, 90, NULL::text, NULL::integer, 45),
    ('customer3'::text, 'R003'::text, 'waiting'::text, '‡πÇ‡∏ï‡πä‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 2 ‡∏ó‡πà‡∏≤‡∏ô'::text, 45, NULL::text, NULL::integer, 15)
) AS queue_info(username, queue_number, status, note, estimated_duration, feedback, rating, minutes_ago)
WHERE p.username = 'restaurant_owner'
AND p_cust.username = queue_info.username;

-- Insert queue services for the restaurant (menu items ordered)
INSERT INTO queue_services (queue_id, service_id, quantity, price, created_at)
SELECT
  q.id AS queue_id,
  s.id AS service_id,
  qs_info.quantity,
  qs_info.price,
  q.created_at
FROM queues q
JOIN shops sh ON q.shop_id = sh.id
JOIN profiles p ON sh.owner_id = p.id
JOIN customers c ON q.customer_id = c.id
JOIN profiles p_cust ON c.profile_id = p_cust.id
JOIN services s ON s.shop_id = sh.id
CROSS JOIN (
  VALUES
    ('customer1'::text, '‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î'::text, 2, 120.00),
    ('customer1'::text, '‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á'::text, 1, 150.00),
    ('customer1'::text, '‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢'::text, 3, 25.00),
    ('customer1'::text, '‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß'::text, 3, 50.00),
    ('customer2'::text, '‡∏ú‡∏±‡∏î‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö'::text, 1, 90.00),
    ('customer2'::text, '‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢'::text, 1, 25.00),
    ('customer2'::text, '‡∏ä‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏¢‡πá‡∏ô'::text, 1, 45.00),
    ('customer3'::text, '‡∏™‡πâ‡∏°‡∏ï‡∏≥‡πÑ‡∏ó‡∏¢'::text, 1, 80.00),
    ('customer3'::text, '‡πÑ‡∏Å‡πà‡∏¢‡πà‡∏≤‡∏á'::text, 1, 120.00),
    ('customer3'::text, '‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß'::text, 2, 20.00)
) AS qs_info(username, service_name, quantity, price)
WHERE p.username = 'restaurant_owner'
AND p_cust.username = qs_info.username
AND s.name = qs_info.service_name;

-- Insert payments for the restaurant
INSERT INTO payments (
  queue_id,
  total_amount,
  paid_amount,
  payment_status,
  payment_method,
  processed_by_employee_id,
  payment_date,
  created_at,
  updated_at
)
SELECT
  q.id AS queue_id,
  CASE
    WHEN q.queue_number = 'R001' THEN 1200.00
    WHEN q.queue_number = 'R002' THEN 850.00
    WHEN q.queue_number = 'R003' THEN 500.00
  END AS total_amount,
  CASE
    WHEN q.queue_number = 'R001' THEN 1200.00
    WHEN q.queue_number = 'R002' THEN 850.00
    WHEN q.queue_number = 'R003' THEN 500.00
  END AS paid_amount,
  'paid'::public.payment_status AS payment_status,
  'card'::public.payment_method AS payment_method,
  (SELECT e.id FROM employees e WHERE e.shop_id = sh.id AND e.position_text = '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü' LIMIT 1) AS processed_by_employee_id,
  q.created_at + INTERVAL '1 hour' AS payment_date,
  q.created_at + INTERVAL '1 hour' AS created_at,
  q.created_at + INTERVAL '1 hour' AS updated_at
FROM shops sh
JOIN profiles p ON sh.owner_id = p.id
JOIN customers c ON c.shop_id = sh.id
JOIN profiles p_cust ON c.profile_id = p_cust.id
JOIN queues q ON q.customer_id = c.id
CROSS JOIN (
  VALUES
    ('customer1'::text, 'R001'::text),
    ('customer2'::text, 'R002'::text),
    ('customer3'::text, 'R003'::text)
) AS payment_info(username, queue_number)
WHERE p.username = 'restaurant_owner'
AND p_cust.username = payment_info.username
AND q.queue_number = payment_info.queue_number;

-- Insert payment items for the restaurant
INSERT INTO payment_items (
  payment_id,
  service_id,
  name,
  price,
  quantity,
  total,
  created_at
)
SELECT
  pay.id AS payment_id,
  s.id AS service_id,
  s.name,
  s.price,
  qs.quantity,
  s.price * qs.quantity AS total,
  pay.created_at
FROM payments pay
JOIN queues q ON pay.queue_id = q.id
JOIN queue_services qs ON qs.queue_id = q.id
JOIN services s ON qs.service_id = s.id
JOIN customers c ON q.customer_id = c.id
JOIN profiles p_cust ON c.profile_id = p_cust.id
JOIN shops sh ON q.shop_id = sh.id
JOIN profiles p ON sh.owner_id = p.id
WHERE p.username = 'restaurant_owner'
AND pay.payment_status = 'paid';

-- Insert shop settings for the restaurant
INSERT INTO shop_settings (
  shop_id,
  max_queue_size,
  estimated_service_time,
  allow_advance_booking,
  booking_window_hours,
  auto_confirm_queues,
  cancellation_deadline,
  maintenance_mode,
  allow_registration,
  require_email_verification,
  session_timeout,
  backup_frequency,
  log_level,
  data_retention_days,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  50 AS max_queue_size,
  15 AS estimated_service_time,
  true AS allow_advance_booking,
  24 AS booking_window_hours,
  true AS auto_confirm_queues,
  30 AS cancellation_deadline,
  false AS maintenance_mode,
  true AS allow_registration,
  false AS require_email_verification,
  30 AS session_timeout,
  'daily'::text AS backup_frequency,
  'info'::text AS log_level,
  365 AS data_retention_days,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
WHERE p.username = 'restaurant_owner';

-- Insert notification settings for the restaurant
INSERT INTO notification_settings (
  shop_id,
  email_notifications,
  sms_notifications,
  push_notifications,
  new_queue,
  queue_update,
  shift_reminder,
  system_alerts,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  true AS email_notifications,
  false AS sms_notifications,
  true AS push_notifications,
  true AS new_queue,
  true AS queue_update,
  true AS shift_reminder,
  true AS system_alerts,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
WHERE p.username = 'restaurant_owner';

-- Insert customer points for the restaurant
INSERT INTO customer_points (
  shop_id,
  customer_id,
  current_points,
  total_earned,
  total_redeemed,
  membership_tier,
  tier_benefits,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  c.id AS customer_id,
  cp_info.current_points,
  cp_info.total_earned,
  cp_info.total_redeemed,
  cp_info.membership_tier,
  cp_info.tier_benefits,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
JOIN customers c ON c.shop_id = s.id
JOIN profiles p_cust ON c.profile_id = p_cust.id
CROSS JOIN (
  VALUES
    ('customer1'::text, 100::integer, 150::integer, 50::integer, 'gold'::public.membership_tier, ARRAY['5% discount', 'Birthday gift']::text[]),
    ('customer2'::text, 75::integer, 75::integer, 0::integer, 'silver'::public.membership_tier, ARRAY['10% discount', 'Birthday gift', 'Priority booking']::text[]),
    ('customer3'::text, 25::integer, 25::integer, 0::integer, 'bronze'::public.membership_tier, ARRAY['5% discount', 'Birthday gift']::text[])
) AS cp_info(username, current_points, total_earned, total_redeemed, membership_tier, tier_benefits)
WHERE p.username = 'restaurant_owner'
AND p_cust.username = cp_info.username;

-- Insert customer point transactions for the restaurant
INSERT INTO customer_point_transactions (
  customer_point_id,
  type,
  points,
  description,
  related_queue_id,
  metadata,
  transaction_date,
  created_at
)
SELECT
  cp.id AS customer_point_id,
  pt_info.type,
  pt_info.points,
  pt_info.description,
  q.id AS related_queue_id,
  pt_info.metadata,
  pay.created_at AS transaction_date,
  pay.created_at
FROM shops s
JOIN profiles p ON s.owner_id = p.id
JOIN customers c ON c.shop_id = s.id
JOIN profiles p_cust ON c.profile_id = p_cust.id
JOIN customer_points cp ON cp.customer_id = c.id
JOIN payments pay ON pay.queue_id IN (SELECT id FROM queues WHERE customer_id = c.id)
JOIN queues q ON pay.queue_id = q.id
CROSS JOIN (
  VALUES
    ('customer1'::text, 'earned'::public.transaction_type, 50, '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£'::text, '{"order_total": 1200}'::jsonb),
    ('customer2'::text, 'earned'::public.transaction_type, 25, '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£'::text, '{"order_total": 850}'::jsonb),
    ('customer3'::text, 'earned'::public.transaction_type, 15, '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£'::text, '{"order_total": 500}'::jsonb)
) AS pt_info(username, type, points, description, metadata)
WHERE p.username = 'restaurant_owner'
AND p_cust.username = pt_info.username;

-- Insert rewards for the restaurant
INSERT INTO rewards (
  shop_id,
  name,
  description,
  type,
  points_required,
  value,
  is_available,
  expiry_days,
  usage_limit,
  icon,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  reward_info.name,
  reward_info.description,
  reward_info.type,
  reward_info.points_required,
  reward_info.value,
  reward_info.is_available,
  reward_info.expiry_days,
  reward_info.usage_limit,
  reward_info.icon,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ'::text, 'discount'::public.reward_type, 50, 10.0, true, 90, 1, 'discount_icon'::text),
    ('‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏ü‡∏£‡∏µ'::text, '‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏ü‡∏£‡∏µ 1 ‡πÅ‡∏Å‡πâ‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö 500 ‡∏ö‡∏≤‡∏ó'::text, 'free_item'::public.reward_type, 75, 1.0, true, 60, 1, 'drink_icon'::text),
    ('‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ü‡∏£‡∏µ 1 ‡∏à‡∏≤‡∏ô'::text, '‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ü‡∏£‡∏µ 1 ‡∏à‡∏≤‡∏ô (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 200 ‡∏ö‡∏≤‡∏ó)'::text, 'free_item'::public.reward_type, 150, 1.0, true, 30, 1, 'food_icon'::text)
) AS reward_info(name, description, type, points_required, value, is_available, expiry_days, usage_limit, icon)
WHERE p.username = 'restaurant_owner';

-- Insert username: mobile_repair_owner for mobile repair shop owner
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '92000000-0000-0000-0000-000000000000',
        '92000000-0000-0000-0000-000000000001',
        'authenticated',
        'authenticated',
        'mobile_repair_owner@example.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "mobile_repair_owner",
          "full_name": "Mobile Repair Owner",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'mobile_repair_owner@example.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: technician1 for mobile repair technician
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '92000000-0000-0000-0000-000000000000',
        '92000000-0000-0000-0000-000000000002',
        'authenticated',
        'authenticated',
        'technician1@mobilerepair.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "technician1",
          "full_name": "‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥ ‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Å‡πà‡∏á",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for technician1
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'technician1@mobilerepair.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: technician2 for mobile repair technician
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '92000000-0000-0000-0000-000000000000',
        '92000000-0000-0000-0000-000000000003',
        'authenticated',
        'authenticated',
        'technician2@mobilerepair.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "technician2",
          "full_name": "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏ä‡πà‡∏≤‡∏á‡∏î‡∏µ",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for technician2
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'technician2@mobilerepair.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Insert mobile repair shop
INSERT INTO shops (
  owner_id,
  name,
  slug,
  description,
  address,
  phone,
  email,
  website,
  logo,
  qr_code_url,
  timezone,
  currency,
  language,
  status,
  created_at,
  updated_at
)
SELECT
  p.id AS owner_id,
  '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ã‡πà‡∏≠‡∏°‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠',
  'mobile-repair',
  '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£',
  '789 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏±‡∏ä‡∏î‡∏≤‡∏†‡∏¥‡πÄ‡∏©‡∏Å ‡πÅ‡∏Ç‡∏ß‡∏á‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á ‡πÄ‡∏Ç‡∏ï‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10400',
  '02-555-1234',
  'contact@mobilerepair.com',
  'https://mobilerepair.com',
  'https://example.com/mobile-repair-logo.png',
  'https://example.com/mobile-repair-qr.png',
  'Asia/Bangkok',
  'THB',
  'th',
  'active',
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM profiles p
WHERE p.username = 'mobile_repair_owner'
LIMIT 1;

-- Link shop to categories
INSERT INTO category_shops (category_id, shop_id, created_at, updated_at)
SELECT 
  c.id AS category_id,
  s.id AS shop_id,
  NOW(),
  NOW()
FROM categories c
CROSS JOIN shops s
JOIN profiles p ON s.owner_id = p.id
WHERE c.slug IN ('electronics', 'repair')
AND p.username = 'mobile_repair_owner'
LIMIT 1;

-- Insert shop opening hours
INSERT INTO shop_opening_hours (shop_id, day_of_week, is_open, open_time, close_time, break_start, break_end, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  day_info.day_of_week,
  day_info.is_open,
  day_info.open_time,
  day_info.close_time,
  day_info.break_start,
  day_info.break_end,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('monday'::text, true, '09:00:00'::time, '19:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('tuesday'::text, true, '09:00:00'::time, '19:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('wednesday'::text, true, '09:00:00'::time, '19:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('thursday'::text, true, '09:00:00'::time, '19:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('friday'::text, true, '09:00:00'::time, '19:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('saturday'::text, true, '10:00:00'::time, '18:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('sunday'::text, true, '10:00:00'::time, '17:00:00'::time, '12:00:00'::time, '13:00:00'::time)
) AS day_info(day_of_week, is_open, open_time, close_time, break_start, break_end)
WHERE p.username = 'mobile_repair_owner';

-- Insert services for the mobile repair shop
INSERT INTO services (shop_id, name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  service_info.name,
  service_info.slug,
  service_info.description,
  service_info.price,
  service_info.estimated_duration,
  service_info.category,
  service_info.is_available,
  service_info.icon,
  service_info.popularity_rank,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≠ iPhone'::text, 'iphone-screen-repair'::text, '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≠ iPhone ‡∏ó‡∏∏‡∏Å‡∏£‡∏∏‡πà‡∏ô ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'::text, 2500.00::numeric, 45::integer, 'screen_repair'::text, true::boolean, 'üì±'::text, 1::integer),
    ('‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≠ Samsung'::text, 'samsung-screen-repair'::text, '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≠ Samsung ‡∏ó‡∏∏‡∏Å‡∏£‡∏∏‡πà‡∏ô ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'::text, 2200.00::numeric, 45::integer, 'screen_repair'::text, true::boolean, 'üì±'::text, 2::integer),
    ('‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà iPhone'::text, 'iphone-battery-repair'::text, '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà iPhone ‡πÅ‡∏ó‡πâ ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'::text, 1200.00::numeric, 30::integer, 'battery'::text, true::boolean, 'üîã'::text, 3::integer),
    ('‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà Samsung'::text, 'samsung-battery-repair'::text, '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà Samsung ‡πÅ‡∏ó‡πâ ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'::text, 1000.00::numeric, 30::integer, 'battery'::text, true::boolean, 'üîã'::text, 4::integer),
    ('‡∏ã‡πà‡∏≠‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏≤‡∏£‡πå‡∏à'::text, 'charging-port-repair'::text, '‡∏ã‡πà‡∏≠‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏≤‡∏£‡πå‡∏à‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡∏£‡∏∏‡πà‡∏ô'::text, 700.00::numeric, 60::integer, 'charging_port'::text, true::boolean, 'üîå'::text, 5::integer),
    ('‡∏ã‡πà‡∏≠‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á'::text, 'back-camera-repair'::text, '‡∏ã‡πà‡∏≠‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡∏£‡∏∏‡πà‡∏ô'::text, 1500.00::numeric, 90::integer, 'camera'::text, true::boolean, 'üì∑'::text, 6::integer),
    ('‡∏ã‡πà‡∏≠‡∏°‡∏•‡∏≥‡πÇ‡∏û‡∏á'::text, 'speaker-repair'::text, '‡∏ã‡πà‡∏≠‡∏°‡∏•‡∏≥‡πÇ‡∏û‡∏á‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡∏£‡∏∏‡πà‡∏ô'::text, 500.00::numeric, 45::integer, 'speaker'::text, true::boolean, 'üîä'::text, 7::integer),
    ('‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£'::text, 'software-installation'::text, '‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà'::text, 300.00::numeric, 60::integer, 'software'::text, true::boolean, 'üíæ'::text, 8::integer),
    ('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á'::text, 'diagnostic-check'::text, '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÇ‡∏î‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î'::text, 100.00::numeric, 15::integer, 'diagnostic'::text, true::boolean, 'üîç'::text, 9::integer)
) AS service_info(name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank)
WHERE p.username = 'mobile_repair_owner';

-- Insert departments
INSERT INTO departments (shop_id, name, slug, description, employee_count, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  dept_info.name,
  dept_info.slug,
  dept_info.description,
  dept_info.employee_count,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ã‡πà‡∏≠‡∏°‡∏Æ‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ß‡∏£‡πå'::text, 'hardware-repair'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ã‡πà‡∏≠‡∏°‡∏Æ‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ß‡∏£‡πå ‡∏à‡∏≠ ‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà ‡∏Å‡∏•‡πâ‡∏≠‡∏á'::text, 2::integer),
    ('‡∏ã‡πà‡∏≠‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå'::text, 'software-repair'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ã‡πà‡∏≠‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö'::text, 1::integer),
    ('‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö'::text, 'welcome'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'::text, 1::integer)
) AS dept_info(name, slug, description, employee_count)
WHERE p.username = 'mobile_repair_owner';

-- Insert employees
INSERT INTO employees (
  shop_id,
  profile_id,
  employee_code,
  name,
  email,
  phone,
  position_text,
  department_id,
  salary,
  hire_date,
  status,
  station_number,
  is_on_duty,
  last_login,
  permissions,
  notes,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  p.id AS profile_id,
  emp_info.employee_code,
  emp_info.name,
  emp_info.email,
  emp_info.phone,
  emp_info.position_text,
  d.id AS department_id,
  emp_info.salary,
  emp_info.hire_date,
  emp_info.status::public.employee_status,
  emp_info.station_number,
  emp_info.is_on_duty,
  emp_info.last_login,
  emp_info.permissions,
  emp_info.notes,
  emp_info.created_at,
  emp_info.updated_at
FROM shops s
JOIN profiles p1 ON s.owner_id = p1.id
CROSS JOIN (
  VALUES 
    ('TECH001', 'technician1', '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥ ‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Å‡πà‡∏á', 'technician1@mobilerepair.com', '081-555-1111', '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™', 28000.00, '2023-03-15'::date, 'active', 1, true, NOW() - INTERVAL '1 day', ARRAY['manage_queues','manage_customers','manage_services'], '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 8 ‡∏õ‡∏µ', NOW() - INTERVAL '10 months', NOW()),
    ('TECH002', 'technician2', '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏ä‡πà‡∏≤‡∏á‡∏î‡∏µ', 'technician2@mobilerepair.com', '082-555-2222', '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå', 22000.00, '2023-08-01'::date, 'active', 2, true, NOW() - INTERVAL '2 days', ARRAY['manage_customers','manage_services'], '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç', NOW() - INTERVAL '5 months', NOW())
) AS emp_info(employee_code, username, name, email, phone, position_text, salary, hire_date, status, station_number, is_on_duty, last_login, permissions, notes, created_at, updated_at)
JOIN profiles p ON p.username = emp_info.username
JOIN departments d ON d.shop_id = s.id AND d.name = CASE 
  WHEN emp_info.position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™' THEN '‡∏ã‡πà‡∏≠‡∏°‡∏Æ‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ß‡∏£‡πå'
  WHEN emp_info.position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå' THEN '‡∏ã‡πà‡∏≠‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå'
  ELSE '‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö'
END
WHERE p1.username = 'mobile_repair_owner';

-- Insert customers
INSERT INTO customers (
  shop_id,
  name,
  phone,
  email,
  date_of_birth,
  gender,
  address,
  notes,
  last_visit,
  is_active,
  profile_id,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  cust_info.name,
  cust_info.phone,
  cust_info.email,
  cust_info.date_of_birth,
  cust_info.gender,
  cust_info.address,
  cust_info.notes,
  cust_info.last_visit,
  cust_info.is_active,
  cust_info.profile_id,
  cust_info.created_at,
  cust_info.updated_at
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏≤‡∏Å‡∏£ ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà'::text, '089-111-2222'::text, 'thanakorn@example.com'::text, '1992-07-10'::date, 'male'::text, '123 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏´‡∏•‡πÇ‡∏¢‡∏ò‡∏¥‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡πÉ‡∏ä‡πâ iPhone 14 Pro ‡∏à‡∏≠‡πÅ‡∏ï‡∏Å‡∏ö‡πà‡∏≠‡∏¢'::text, NOW() - INTERVAL '5 days', true::boolean, NULL::uuid, NOW() - INTERVAL '4 months', NOW() - INTERVAL '5 days'),
    ('‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à ‡∏™‡∏°‡∏≤‡∏£‡πå‡∏ó‡πÇ‡∏ü‡∏ô'::text, '088-333-4444'::text, 'pimjai@example.com'::text, '1988-12-25'::date, 'female'::text, '456 ‡∏ñ‡∏ô‡∏ô‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡πÉ‡∏ä‡πâ Samsung Galaxy S23 ‡πÅ‡∏ö‡∏ï‡πÄ‡∏™‡∏∑‡πà‡∏≠‡∏°'::text, NOW() - INTERVAL '10 days', true::boolean, NULL::uuid, NOW() - INTERVAL '3 months', NOW() - INTERVAL '10 days'),
    ('‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ'::text, '087-555-6666'::text, 'wittaya@example.com'::text, '1985-04-18'::date, 'male'::text, '789 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏∏‡πà‡∏ô ‡∏ä‡∏≠‡∏ö‡∏•‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà'::text, NOW() - INTERVAL '20 days', true::boolean, NULL::uuid, NOW() - INTERVAL '6 months', NOW() - INTERVAL '20 days')
) AS cust_info(name, phone, email, date_of_birth, gender, address, notes, last_visit, is_active, profile_id, created_at, updated_at)
WHERE p.username = 'mobile_repair_owner';

-- Insert queues
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'mobile_repair_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
),
employee_data AS (
  SELECT 
    e.id AS employee_id,
    e.position_text
  FROM employees e
  JOIN shop_data sd ON e.shop_id = sd.shop_id
)
INSERT INTO queues (
  shop_id,
  customer_id,
  queue_number,
  status,
  priority,
  estimated_duration,
  estimated_call_time,
  served_by_employee_id,
  note,
  feedback,
  rating,
  created_at,
  updated_at,
  served_at,
  completed_at
)
SELECT
  sd.shop_id,
  CASE 
    WHEN q.queue_number = 'M001' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏≤‡∏Å‡∏£ ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà')
    WHEN q.queue_number = 'M002' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à ‡∏™‡∏°‡∏≤‡∏£‡πå‡∏ó‡πÇ‡∏ü‡∏ô')
    WHEN q.queue_number = 'M003' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ')
  END AS customer_id,
  q.queue_number,
  q.status,
  q.priority,
  q.estimated_duration,
  q.estimated_call_time,
  CASE 
    WHEN q.queue_number IN ('M001', 'M002') THEN (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™')
    ELSE NULL
  END AS served_by_employee_id,
  q.note,
  q.feedback,
  q.rating,
  q.created_at,
  q.updated_at,
  q.served_at,
  q.completed_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('M001'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 45::integer, NOW() - INTERVAL '5 days' + INTERVAL '30 minutes', '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≠ iPhone 14 Pro'::text, '‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏£‡πá‡∏ß ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ'::text, 5::integer, NOW() - INTERVAL '5 days', NOW() - INTERVAL '5 days' + INTERVAL '1 hour', NOW() - INTERVAL '5 days' + INTERVAL '30 minutes', NOW() - INTERVAL '5 days' + INTERVAL '1 hour'),
    ('M002'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 30::integer, NOW() - INTERVAL '10 days' + INTERVAL '30 minutes', '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà Samsung Galaxy S23'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏£‡∏£‡∏°'::text, 4::integer, NOW() - INTERVAL '10 days', NOW() - INTERVAL '10 days' + INTERVAL '45 minutes', NOW() - INTERVAL '10 days' + INTERVAL '30 minutes', NOW() - INTERVAL '10 days' + INTERVAL '45 minutes'),
    ('M003'::text, 'waiting'::public.queue_status, 'high'::public.queue_priority, 60::integer, NOW() + INTERVAL '45 minutes', '‡∏ã‡πà‡∏≠‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏≤‡∏£‡πå‡∏à Huawei P50'::text, NULL::text, NULL::integer, NOW() - INTERVAL '15 minutes', NOW() - INTERVAL '15 minutes', NULL::timestamp, NULL::timestamp)
) AS q(queue_number, status, priority, estimated_duration, estimated_call_time, note, feedback, rating, created_at, updated_at, served_at, completed_at);

-- Insert queue services
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'mobile_repair_owner'
  LIMIT 1
),
queue_data AS (
  SELECT 
    q.id AS queue_id,
    q.queue_number,
    q.created_at
  FROM queues q
  JOIN shop_data sd ON q.shop_id = sd.shop_id
),
service_data AS (
  SELECT 
    s.id AS service_id,
    s.name,
    s.price
  FROM services s
  JOIN shop_data sd ON s.shop_id = sd.shop_id
)
INSERT INTO queue_services (
  queue_id,
  service_id,
  quantity,
  price,
  created_at
)
SELECT
  qd.queue_id,
  CASE 
    WHEN qd.queue_number = 'M001' THEN (SELECT service_id FROM service_data WHERE name = '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≠ iPhone')
    WHEN qd.queue_number = 'M002' THEN (SELECT service_id FROM service_data WHERE name = '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà Samsung')
    WHEN qd.queue_number = 'M003' THEN (SELECT service_id FROM service_data WHERE name = '‡∏ã‡πà‡∏≠‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏≤‡∏£‡πå‡∏à')
  END AS service_id,
  1 AS quantity,
  CASE 
    WHEN qd.queue_number = 'M001' THEN 2500.00
    WHEN qd.queue_number = 'M002' THEN 1000.00
    WHEN qd.queue_number = 'M003' THEN 700.00
  END AS price,
  qd.created_at
FROM queue_data qd;

-- Insert payments
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'mobile_repair_owner'
  LIMIT 1
),
queue_data AS (
  SELECT 
    q.id AS queue_id,
    q.queue_number,
    q.completed_at
  FROM queues q
  JOIN shop_data sd ON q.shop_id = sd.shop_id
  WHERE q.status = 'completed'::public.queue_status
),
employee_data AS (
  SELECT 
    e.id AS employee_id,
    e.position_text
  FROM employees e
  JOIN shop_data sd ON e.shop_id = sd.shop_id
)
INSERT INTO payments (
  queue_id,
  total_amount,
  paid_amount,
  payment_status,
  payment_method,
  processed_by_employee_id,
  payment_date,
  created_at,
  updated_at
)
SELECT
  qd.queue_id,
  CASE 
    WHEN qd.queue_number = 'M001' THEN 2500.00
    WHEN qd.queue_number = 'M002' THEN 1000.00
  END AS total_amount,
  CASE 
    WHEN qd.queue_number = 'M001' THEN 2500.00
    WHEN qd.queue_number = 'M002' THEN 1000.00
  END AS paid_amount,
  'paid'::public.payment_status AS payment_status,
  CASE 
    WHEN qd.queue_number = 'M001' THEN 'card'::public.payment_method
    WHEN qd.queue_number = 'M002' THEN 'cash'::public.payment_method
  END AS payment_method,
  (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™' LIMIT 1) AS processed_by_employee_id,
  qd.completed_at,
  qd.completed_at,
  qd.completed_at
FROM queue_data qd
WHERE qd.queue_number IN ('M001', 'M002');

-- Insert payment items
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'mobile_repair_owner'
  LIMIT 1
),
service_data AS (
  SELECT 
    s.id AS service_id,
    s.name,
    s.price
  FROM services s
  JOIN shop_data sd ON s.shop_id = sd.shop_id
),
payment_data AS (
  SELECT 
    p.id AS payment_id,
    p.queue_id,
    p.created_at
  FROM payments p
  JOIN queues q ON p.queue_id = q.id
  JOIN shop_data sd ON q.shop_id = sd.shop_id
),
queue_data AS (
  SELECT 
    q.id AS queue_id,
    q.queue_number
  FROM queues q
  JOIN shop_data sd ON q.shop_id = sd.shop_id
)
INSERT INTO payment_items (
  payment_id,
  service_id,
  name,
  price,
  quantity,
  total,
  created_at
)
SELECT
  pd.payment_id,
  CASE 
    WHEN qd.queue_number = 'M001' THEN (SELECT service_id FROM service_data WHERE name = '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≠ iPhone')
    WHEN qd.queue_number = 'M002' THEN (SELECT service_id FROM service_data WHERE name = '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà Samsung')
  END AS service_id,
  CASE 
    WHEN qd.queue_number = 'M001' THEN '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≠ iPhone'
    WHEN qd.queue_number = 'M002' THEN '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà Samsung'
  END AS name,
  CASE 
    WHEN qd.queue_number = 'M001' THEN 2500.00
    WHEN qd.queue_number = 'M002' THEN 1000.00
  END AS price,
  1 AS quantity,
  CASE 
    WHEN qd.queue_number = 'M001' THEN 2500.00
    WHEN qd.queue_number = 'M002' THEN 1000.00
  END AS total,
  pd.created_at
FROM payment_data pd
JOIN queue_data qd ON pd.queue_id = qd.queue_id
WHERE qd.queue_number IN ('M001', 'M002');

-- Insert shop settings
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'mobile_repair_owner'
  LIMIT 1
)
INSERT INTO shop_settings (
  shop_id,
  max_queue_size,
  estimated_service_time,
  allow_advance_booking,
  booking_window_hours,
  auto_confirm_queues,
  cancellation_deadline,
  maintenance_mode,
  allow_registration,
  require_email_verification,
  session_timeout,
  backup_frequency,
  log_level,
  data_retention_days,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  30,
  45,
  true,
  72,
  true,
  60,
  false,
  true,
  false,
  45,
  'daily',
  'info',
  180,
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM shop_data sd;

-- Insert notification settings
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'mobile_repair_owner'
  LIMIT 1
)
INSERT INTO notification_settings (
  shop_id,
  email_notifications,
  sms_notifications,
  push_notifications,
  new_queue,
  queue_update,
  shift_reminder,
  system_alerts,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  true AS email_notifications,
  true AS sms_notifications,
  true AS push_notifications,
  true AS new_queue,
  true AS queue_update,
  true AS shift_reminder,
  true AS system_alerts,
  NOW() - INTERVAL '12 months' AS created_at,
  NOW() - INTERVAL '1 day' AS updated_at
FROM shop_data sd;

-- Insert customer points
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'mobile_repair_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name,
    c.last_visit
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
)
INSERT INTO customer_points (
  shop_id,
  customer_id,
  current_points,
  total_earned,
  total_redeemed,
  membership_tier,
  tier_benefits,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  cd.customer_id,
  CASE 
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏≤‡∏Å‡∏£ ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà' THEN 125
    WHEN cd.name = '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à ‡∏™‡∏°‡∏≤‡∏£‡πå‡∏ó‡πÇ‡∏ü‡∏ô' THEN 50
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ' THEN 200
  END AS current_points,
  CASE 
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏≤‡∏Å‡∏£ ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà' THEN 125
    WHEN cd.name = '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à ‡∏™‡∏°‡∏≤‡∏£‡πå‡∏ó‡πÇ‡∏ü‡∏ô' THEN 50
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ' THEN 200
  END AS total_earned,
  0 AS total_redeemed,
  CASE 
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏≤‡∏Å‡∏£ ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà' THEN 'silver'::public.membership_tier
    WHEN cd.name = '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à ‡∏™‡∏°‡∏≤‡∏£‡πå‡∏ó‡πÇ‡∏ü‡∏ô' THEN 'bronze'::public.membership_tier
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ' THEN 'gold'::public.membership_tier
  END AS membership_tier,
  CASE 
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏≤‡∏Å‡∏£ ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà' THEN ARRAY['10% discount', 'Priority service']
    WHEN cd.name = '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à ‡∏™‡∏°‡∏≤‡∏£‡πå‡∏ó‡πÇ‡∏ü‡∏ô' THEN ARRAY['5% discount', 'Birthday gift']
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ' THEN ARRAY['15% discount', 'Priority service', 'Free diagnostic']
  END AS tier_benefits,
  CASE 
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏≤‡∏Å‡∏£ ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà' THEN NOW() - INTERVAL '4 months'
    WHEN cd.name = '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à ‡∏™‡∏°‡∏≤‡∏£‡πå‡∏ó‡πÇ‡∏ü‡∏ô' THEN NOW() - INTERVAL '3 months'
    WHEN cd.name = '‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ' THEN NOW() - INTERVAL '6 months'
  END AS created_at,
  cd.last_visit AS updated_at
FROM shop_data sd
CROSS JOIN customer_data cd;

-- Insert rewards
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'mobile_repair_owner'
  LIMIT 1
)
INSERT INTO rewards (
  shop_id,
  name,
  description,
  type,
  points_required,
  value,
  is_available,
  expiry_days,
  usage_limit,
  icon,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  reward_info.name,
  reward_info.description,
  reward_info.type,
  reward_info.points_required,
  reward_info.value,
  reward_info.is_available,
  reward_info.expiry_days,
  reward_info.usage_limit,
  reward_info.icon,
  NOW() - INTERVAL '12 months' AS created_at,
  NOW() - INTERVAL '1 day' AS updated_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ'::text, 'discount'::public.reward_type, 100::integer, 10.00::numeric, true::boolean, 90::integer, 1::integer, 'üè∑Ô∏è'::text),
    ('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ü‡∏£‡∏µ'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏£‡∏µ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á'::text, 'free_item'::public.reward_type, 50::integer, 100.00::numeric, true::boolean, 60::integer, 1::integer, 'üîç'::text),
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 20%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 20% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å VIP'::text, 'discount'::public.reward_type, 200::integer, 20.00::numeric, true::boolean, 120::integer, 1::integer, '‚≠ê'::text)
) AS reward_info(name, description, type, points_required, value, is_available, expiry_days, usage_limit, icon);

-- Insert username: laundry_owner for laundry shop owner
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '93000000-0000-0000-0000-000000000000',
        '93000000-0000-0000-0000-000000000001',
        'authenticated',
        'authenticated',
        'laundry_owner@example.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "laundry_owner",
          "full_name": "Laundry Owner",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'laundry_owner@example.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: washer1 for laundry employee
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '93000000-0000-0000-0000-000000000000',
        '93000000-0000-0000-0000-000000000002',
        'authenticated',
        'authenticated',
        'washer1@cleanlaundry.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "washer1",
          "full_name": "‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏û‡∏á‡∏©‡πå ‡∏ã‡∏±‡∏Å‡∏™‡∏∞‡∏≠‡∏≤‡∏î",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for washer1
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'washer1@cleanlaundry.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Insert laundry shop
INSERT INTO shops (
  owner_id,
  name,
  slug,
  description,
  address,
  phone,
  email,
  website,
  logo,
  qr_code_url,
  timezone,
  currency,
  language,
  status,
  created_at,
  updated_at
)
SELECT
  p.id AS owner_id,
  '‡∏£‡πâ‡∏≤‡∏ô‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏Ñ‡∏•‡∏µ‡∏ô‡πÅ‡∏•‡∏ô‡∏î‡∏£‡∏µ‡πâ',
  'clean-laundry',
  '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏´‡∏≠‡∏°‡∏™‡∏î',
  '321 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 4 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
  '02-777-8888',
  'contact@cleanlaundry.com',
  'https://cleanlaundry.com',
  'https://example.com/laundry-logo.png',
  'https://example.com/laundry-qr.png',
  'Asia/Bangkok',
  'THB',
  'th',
  'active',
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM profiles p
WHERE p.username = 'laundry_owner'
LIMIT 1;

-- Link shop to categories
INSERT INTO category_shops (category_id, shop_id, created_at, updated_at)
SELECT 
  c.id AS category_id,
  s.id AS shop_id,
  NOW(),
  NOW()
FROM categories c
CROSS JOIN shops s
JOIN profiles p ON s.owner_id = p.id
WHERE c.slug = 'tailor'
AND p.username = 'laundry_owner';

-- Insert shop opening hours
INSERT INTO shop_opening_hours (shop_id, day_of_week, is_open, open_time, close_time, break_start, break_end, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  day_info.day_of_week,
  day_info.is_open,
  day_info.open_time,
  day_info.close_time,
  day_info.break_start,
  day_info.break_end,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('monday'::text, true, '08:00:00'::time, '20:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('tuesday'::text, true, '08:00:00'::time, '20:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('wednesday'::text, true, '08:00:00'::time, '20:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('thursday'::text, true, '08:00:00'::time, '20:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('friday'::text, true, '08:00:00'::time, '20:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('saturday'::text, true, '08:00:00'::time, '19:00:00'::time, '12:00:00'::time, '13:00:00'::time),
    ('sunday'::text, true, '09:00:00'::time, '18:00:00'::time, '12:00:00'::time, '13:00:00'::time)
) AS day_info(day_of_week, is_open, open_time, close_time, break_start, break_end)
WHERE p.username = 'laundry_owner';

-- Insert services for the laundry shop
INSERT INTO services (shop_id, name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  service_info.name,
  service_info.slug,
  service_info.description,
  service_info.price,
  service_info.estimated_duration,
  service_info.category,
  service_info.is_available,
  service_info.icon,
  service_info.popularity_rank,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡∏¥‡πâ‡∏ï'::text, 'shirt-wash-iron'::text, '‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡∏¥‡πâ‡∏ï‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ‡∏£‡∏µ‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'::text, 40.00::numeric, 1440::integer, 'wash_iron'::text, true::boolean, 'üëî'::text, 1::integer),
    ('‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á'::text, 'pants-wash-iron'::text, '‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó ‡∏£‡∏µ‡∏î‡∏û‡∏±‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'::text, 50.00::numeric, 1440::integer, 'wash_iron'::text, true::boolean, 'üëñ'::text, 2::integer),
    ('‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏ä‡∏∏‡∏î‡∏™‡∏π‡∏ó'::text, 'suit-wash-iron'::text, '‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏ä‡∏∏‡∏î‡∏™‡∏π‡∏ó ‡∏î‡∏π‡πÅ‡∏•‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡∏£‡∏µ‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'::text, 200.00::numeric, 2880::integer, 'suit'::text, true::boolean, 'ü§µ'::text, 3::integer),
    ('‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏ä‡∏∏‡∏î‡∏Å‡∏£‡∏∞‡πÇ‡∏õ‡∏£‡∏á'::text, 'dress-wash-iron'::text, '‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏ä‡∏∏‡∏î‡∏Å‡∏£‡∏∞‡πÇ‡∏õ‡∏£‡∏á ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏î‡∏µ'::text, 80.00::numeric, 1440::integer, 'dress'::text, true::boolean, 'üëó'::text, 4::integer),
    ('‡∏ã‡∏±‡∏Å‡πÅ‡∏´‡πâ‡∏á'::text, 'dry-clean'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏Å‡πÅ‡∏´‡πâ‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡πâ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©'::text, 150.00::numeric, 2880::integer, 'dry_clean'::text, true::boolean, 'üß•'::text, 5::integer),
    ('‡∏£‡∏µ‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß'::text, 'iron-only'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏î‡∏ú‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß'::text, 20.00::numeric, 30::integer, 'iron'::text, true::boolean, 'üî•'::text, 6::integer),
    ('‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡∏´‡πà‡∏°'::text, 'blanket-wash'::text, '‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡∏´‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà'::text, 120.00::numeric, 2880::integer, 'blanket'::text, true::boolean, 'üõèÔ∏è'::text, 7::integer),
    ('‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡∏°‡πà‡∏≤‡∏ô'::text, 'curtain-wash'::text, '‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡∏°‡πà‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î'::text, 100.00::numeric, 2880::integer, 'curtain'::text, true::boolean, 'ü™ü'::text, 8::integer)
) AS service_info(name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank)
WHERE p.username = 'laundry_owner';

-- Insert departments
INSERT INTO departments (shop_id, name, slug, description, employee_count, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  dept_info.name,
  dept_info.slug,
  dept_info.description,
  dept_info.employee_count,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î'::text, 'wash-iron'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏´‡∏•‡∏±‡∏Å'::text, 2::integer),
    ('‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö'::text, 'reception'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'::text, 1::integer)
) AS dept_info(name, slug, description, employee_count)
WHERE p.username = 'laundry_owner';

-- Insert employees
INSERT INTO employees (
  shop_id,
  profile_id,
  employee_code,
  name,
  email,
  phone,
  position_text,
  department_id,
  salary,
  hire_date,
  status,
  station_number,
  is_on_duty,
  last_login,
  permissions,
  notes,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  p.id AS profile_id,
  emp_info.employee_code,
  emp_info.name,
  emp_info.email,
  emp_info.phone,
  emp_info.position_text,
  d.id AS department_id,
  emp_info.salary,
  emp_info.hire_date,
  emp_info.status::public.employee_status,
  emp_info.station_number,
  emp_info.is_on_duty,
  emp_info.last_login,
  emp_info.permissions,
  emp_info.notes,
  emp_info.created_at,
  emp_info.updated_at
FROM shops s
JOIN profiles p1 ON s.owner_id = p1.id
CROSS JOIN (
  VALUES 
    ('WASH001', 'washer1', '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏û‡∏á‡∏©‡πå ‡∏ã‡∏±‡∏Å‡∏™‡∏∞‡∏≠‡∏≤‡∏î', 'washer1@cleanlaundry.com', '081-777-8888', '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏´‡∏•‡∏±‡∏Å', 20000.00, '2023-05-01'::date, 'active', 1, true, NOW() - INTERVAL '1 day', ARRAY['manage_queues','manage_customers','manage_services'], '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå 5 ‡∏õ‡∏µ', NOW() - INTERVAL '8 months', NOW())
) AS emp_info(employee_code, username, name, email, phone, position_text, salary, hire_date, status, station_number, is_on_duty, last_login, permissions, notes, created_at, updated_at)
JOIN profiles p ON p.username = emp_info.username
JOIN departments d ON d.shop_id = s.id AND d.name = '‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î'
WHERE p1.username = 'laundry_owner';

-- Insert customers
INSERT INTO customers (
  shop_id,
  name,
  phone,
  email,
  date_of_birth,
  gender,
  address,
  notes,
  last_visit,
  is_active,
  profile_id,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  cust_info.name,
  cust_info.phone,
  cust_info.email,
  cust_info.date_of_birth,
  cust_info.gender,
  cust_info.address,
  cust_info.notes,
  cust_info.last_visit,
  cust_info.is_active,
  cust_info.profile_id,
  cust_info.created_at,
  cust_info.updated_at
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏®‡∏£‡∏µ ‡πÉ‡∏™‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î'::text, '089-555-1111'::text, 'somsri@example.com'::text, '1987-03-12'::date, 'female'::text, '111 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ‡∏™‡πà‡∏á‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡∏¥‡πâ‡∏ï‡∏ó‡∏∏‡∏Å‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå'::text, NOW() - INTERVAL '3 days', true::boolean, NULL::uuid, NOW() - INTERVAL '6 months', NOW() - INTERVAL '3 days'),
    ('‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'::text, '088-666-2222'::text, 'wichai@example.com'::text, '1982-11-08'::date, 'male'::text, '222 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 4 ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏ä‡∏≠‡∏ö‡∏£‡∏µ‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏°‡∏≤‡∏Å'::text, NOW() - INTERVAL '7 days', true::boolean, NULL::uuid, NOW() - INTERVAL '4 months', NOW() - INTERVAL '7 days'),
    ('‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÉ‡∏™'::text, '087-777-3333'::text, 'malee@example.com'::text, '1990-06-25'::date, 'female'::text, '333 ‡∏ñ‡∏ô‡∏ô‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏™‡πà‡∏á‡∏ä‡∏∏‡∏î‡∏™‡∏π‡∏ó‡∏ö‡πà‡∏≠‡∏¢'::text, NOW() - INTERVAL '14 days', true::boolean, NULL::uuid, NOW() - INTERVAL '3 months', NOW() - INTERVAL '14 days')
) AS cust_info(name, phone, email, date_of_birth, gender, address, notes, last_visit, is_active, profile_id, created_at, updated_at)
WHERE p.username = 'laundry_owner';

-- Insert queues
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'laundry_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
),
employee_data AS (
  SELECT 
    e.id AS employee_id,
    e.position_text
  FROM employees e
  JOIN shop_data sd ON e.shop_id = sd.shop_id
)
INSERT INTO queues (
  shop_id,
  customer_id,
  queue_number,
  status,
  priority,
  estimated_duration,
  estimated_call_time,
  served_by_employee_id,
  note,
  feedback,
  rating,
  created_at,
  updated_at,
  served_at,
  completed_at
)
SELECT
  sd.shop_id,
  CASE 
    WHEN q.queue_number = 'L001' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏®‡∏£‡∏µ ‡πÉ‡∏™‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î')
    WHEN q.queue_number = 'L002' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢')
    WHEN q.queue_number = 'L003' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÉ‡∏™')
  END AS customer_id,
  q.queue_number,
  q.status,
  q.priority,
  q.estimated_duration,
  q.estimated_call_time,
  CASE 
    WHEN q.queue_number IN ('L001', 'L002') THEN (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏´‡∏•‡∏±‡∏Å')
    ELSE NULL
  END AS served_by_employee_id,
  q.note,
  q.feedback,
  q.rating,
  q.created_at,
  q.updated_at,
  q.served_at,
  q.completed_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('L001'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 1440::integer, NOW() - INTERVAL '3 days' + INTERVAL '30 minutes', '‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡∏¥‡πâ‡∏ï 5 ‡∏ï‡∏±‡∏ß'::text, '‡∏£‡∏µ‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏°‡∏≤‡∏Å'::text, 5::integer, NOW() - INTERVAL '3 days', NOW() - INTERVAL '3 days' + INTERVAL '1 day', NOW() - INTERVAL '3 days' + INTERVAL '30 minutes', NOW() - INTERVAL '2 days'),
    ('L002'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 1440::integer, NOW() - INTERVAL '7 days' + INTERVAL '30 minutes', '‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á 3 ‡∏ï‡∏±‡∏ß'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ'::text, 4::integer, NOW() - INTERVAL '7 days', NOW() - INTERVAL '7 days' + INTERVAL '1 day', NOW() - INTERVAL '7 days' + INTERVAL '30 minutes', NOW() - INTERVAL '6 days'),
    ('L003'::text, 'serving'::public.queue_status, 'high'::public.queue_priority, 2880::integer, NOW() + INTERVAL '1 day', '‡∏ä‡∏∏‡∏î‡∏™‡∏π‡∏ó 1 ‡∏ä‡∏∏‡∏î'::text, NULL::text, NULL::integer, NOW() - INTERVAL '1 day', NOW() - INTERVAL '1 day', NOW() - INTERVAL '30 minutes', NULL::timestamp)
) AS q(queue_number, status, priority, estimated_duration, estimated_call_time, note, feedback, rating, created_at, updated_at, served_at, completed_at);

-- Insert shop settings
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'laundry_owner'
  LIMIT 1
)
INSERT INTO shop_settings (
  shop_id,
  max_queue_size,
  estimated_service_time,
  allow_advance_booking,
  booking_window_hours,
  auto_confirm_queues,
  cancellation_deadline,
  maintenance_mode,
  allow_registration,
  require_email_verification,
  session_timeout,
  backup_frequency,
  log_level,
  data_retention_days,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  40,
  1440,
  true,
  168,
  true,
  120,
  false,
  true,
  false,
  60,
  'daily',
  'info',
  180,
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM shop_data sd;

-- Insert customer points
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'laundry_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name,
    c.last_visit
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
)
INSERT INTO customer_points (
  shop_id,
  customer_id,
  current_points,
  total_earned,
  total_redeemed,
  membership_tier,
  tier_benefits,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  cd.customer_id,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏®‡∏£‡∏µ ‡πÉ‡∏™‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN 80
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' THEN 60
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÉ‡∏™' THEN 120
  END AS current_points,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏®‡∏£‡∏µ ‡πÉ‡∏™‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN 80
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' THEN 60
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÉ‡∏™' THEN 120
  END AS total_earned,
  0 AS total_redeemed,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏®‡∏£‡∏µ ‡πÉ‡∏™‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN 'silver'::public.membership_tier
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' THEN 'bronze'::public.membership_tier
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÉ‡∏™' THEN 'gold'::public.membership_tier
  END AS membership_tier,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏®‡∏£‡∏µ ‡πÉ‡∏™‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN ARRAY['10% discount', 'Express service']
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' THEN ARRAY['5% discount', 'Birthday gift']
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÉ‡∏™' THEN ARRAY['15% discount', 'Priority service', 'Free pickup']
  END AS tier_benefits,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏®‡∏£‡∏µ ‡πÉ‡∏™‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN NOW() - INTERVAL '6 months'
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' THEN NOW() - INTERVAL '4 months'
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÉ‡∏™' THEN NOW() - INTERVAL '3 months'
  END AS created_at,
  cd.last_visit AS updated_at
FROM shop_data sd
CROSS JOIN customer_data cd;

-- Insert rewards
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'laundry_owner'
  LIMIT 1
)
INSERT INTO rewards (
  shop_id,
  name,
  description,
  type,
  points_required,
  value,
  is_available,
  expiry_days,
  usage_limit,
  icon,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  reward_info.name,
  reward_info.description,
  reward_info.type,
  reward_info.points_required,
  reward_info.value,
  reward_info.is_available,
  reward_info.expiry_days,
  reward_info.usage_limit,
  reward_info.icon,
  NOW() - INTERVAL '12 months' AS created_at,
  NOW() - INTERVAL '1 day' AS updated_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ'::text, 'discount'::public.reward_type, 50::integer, 10.00::numeric, true::boolean, 90::integer, 1::integer, 'üè∑Ô∏è'::text),
    ('‡∏£‡∏µ‡∏î‡∏ü‡∏£‡∏µ 1 ‡∏ä‡∏¥‡πâ‡∏ô'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏î‡∏ü‡∏£‡∏µ 1 ‡∏ä‡∏¥‡πâ‡∏ô'::text, 'free_item'::public.reward_type, 100::integer, 20.00::numeric, true::boolean, 60::integer, 1::integer, 'üî•'::text),
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 20%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 20% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å VIP'::text, 'discount'::public.reward_type, 150::integer, 20.00::numeric, true::boolean, 120::integer, 1::integer, '‚≠ê'::text)
) AS reward_info(name, description, type, points_required, value, is_available, expiry_days, usage_limit, icon);

-- Insert username: beauty_owner for beauty salon owner
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '94000000-0000-0000-0000-000000000000',
        '94000000-0000-0000-0000-000000000001',
        'authenticated',
        'authenticated',
        'beauty_owner@example.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "beauty_owner",
          "full_name": "Beauty Salon Owner",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'beauty_owner@example.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: beautician1 for beauty salon employee
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '94000000-0000-0000-0000-000000000000',
        '94000000-0000-0000-0000-000000000002',
        'authenticated',
        'authenticated',
        'beautician1@beautyworld.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "beautician1",
          "full_name": "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏∏‡∏î‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for beautician1
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'beautician1@beautyworld.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Insert beauty salon shop
INSERT INTO shops (
  owner_id,
  name,
  slug,
  description,
  address,
  phone,
  email,
  website,
  logo,
  qr_code_url,
  timezone,
  currency,
  language,
  status,
  created_at,
  updated_at
)
SELECT
  p.id AS owner_id,
  '‡∏ö‡∏¥‡∏ß‡∏ï‡∏µ‡πâ‡πÄ‡∏ß‡∏¥‡∏•‡∏î‡πå ‡∏™‡∏≤‡∏•‡∏≠‡∏ô',
  'beauty-world',
  '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û',
  '555 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏µ‡∏•‡∏° ‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏µ‡∏•‡∏° ‡πÄ‡∏Ç‡∏ï‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10500',
  '02-999-1234',
  'contact@beautyworld.com',
  'https://beautyworld.com',
  'https://example.com/beauty-logo.png',
  'https://example.com/beauty-qr.png',
  'Asia/Bangkok',
  'THB',
  'th',
  'active',
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM profiles p
WHERE p.username = 'beauty_owner'
LIMIT 1;

-- Link shop to categories
INSERT INTO category_shops (category_id, shop_id, created_at, updated_at)
SELECT 
  c.id AS category_id,
  s.id AS shop_id,
  NOW(),
  NOW()
FROM categories c
CROSS JOIN shops s
JOIN profiles p ON s.owner_id = p.id
WHERE c.slug = 'beauty'
AND p.username = 'beauty_owner';

-- Insert shop opening hours
INSERT INTO shop_opening_hours (shop_id, day_of_week, is_open, open_time, close_time, break_start, break_end, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  day_info.day_of_week,
  day_info.is_open,
  day_info.open_time,
  day_info.close_time,
  day_info.break_start,
  day_info.break_end,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('monday'::text, true, '10:00:00'::time, '20:00:00'::time, '14:00:00'::time, '15:00:00'::time),
    ('tuesday'::text, true, '10:00:00'::time, '20:00:00'::time, '14:00:00'::time, '15:00:00'::time),
    ('wednesday'::text, true, '10:00:00'::time, '20:00:00'::time, '14:00:00'::time, '15:00:00'::time),
    ('thursday'::text, true, '10:00:00'::time, '20:00:00'::time, '14:00:00'::time, '15:00:00'::time),
    ('friday'::text, true, '10:00:00'::time, '21:00:00'::time, '14:00:00'::time, '15:00:00'::time),
    ('saturday'::text, true, '09:00:00'::time, '21:00:00'::time, '14:00:00'::time, '15:00:00'::time),
    ('sunday'::text, true, '10:00:00'::time, '19:00:00'::time, '14:00:00'::time, '15:00:00'::time)
) AS day_info(day_of_week, is_open, open_time, close_time, break_start, break_end)
WHERE p.username = 'beauty_owner';

-- Insert services for the beauty salon
INSERT INTO services (shop_id, name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  service_info.name,
  service_info.slug,
  service_info.description,
  service_info.price,
  service_info.estimated_duration,
  service_info.category,
  service_info.is_available,
  service_info.icon,
  service_info.popularity_rank,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏°‡∏∑‡∏≠'::text, 'manicure'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏°‡∏∑‡∏≠ ‡∏ï‡∏±‡∏î‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏•‡πá‡∏ö ‡∏ó‡∏≤‡∏™‡∏µ'::text, 300.00::numeric, 60::integer, 'nail'::text, true::boolean, 'üíÖ'::text, 1::integer),
    ('‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡πÄ‡∏ó‡πâ‡∏≤'::text, 'pedicure'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡πÄ‡∏ó‡πâ‡∏≤ ‡∏ï‡∏±‡∏î‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏•‡πá‡∏ö ‡∏ó‡∏≤‡∏™‡∏µ'::text, 350.00::numeric, 75::integer, 'nail'::text, true::boolean, 'ü¶∂'::text, 2::integer),
    ('‡∏ï‡πà‡∏≠‡πÄ‡∏•‡πá‡∏ö‡πÄ‡∏à‡∏•'::text, 'gel-nail-extension'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÄ‡∏•‡πá‡∏ö‡πÄ‡∏à‡∏• ‡∏ó‡∏≥‡∏•‡∏≤‡∏¢ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°'::text, 800.00::numeric, 120::integer, 'nail'::text, true::boolean, '‚ú®'::text, 3::integer),
    ('‡∏ó‡∏≥‡∏ú‡∏°‡∏™‡∏µ'::text, 'hair-coloring'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏™‡∏µ‡∏ú‡∏° ‡∏™‡∏µ‡∏™‡∏ß‡∏¢ ‡∏ï‡∏¥‡∏î‡∏ó‡∏ô'::text, 1500.00::numeric, 180::integer, 'hair'::text, true::boolean, 'üé®'::text, 4::integer),
    ('‡∏î‡∏±‡∏î‡∏ú‡∏°'::text, 'hair-perm'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏±‡∏î‡∏ú‡∏° ‡∏•‡∏≠‡∏ô‡∏™‡∏ß‡∏¢ ‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥'::text, 1200.00::numeric, 150::integer, 'hair'::text, true::boolean, 'üåÄ'::text, 5::integer),
    ('‡∏¢‡∏∑‡∏î‡∏ú‡∏°'::text, 'hair-straightening'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏î‡∏ú‡∏° ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏ï‡∏£‡∏á ‡πÄ‡∏á‡∏≤‡∏á‡∏≤‡∏°'::text, 1000.00::numeric, 120::integer, 'hair'::text, true::boolean, 'üìè'::text, 6::integer),
    ('‡∏ó‡∏£‡∏µ‡∏ó‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏ú‡∏°'::text, 'hair-treatment'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏ú‡∏° ‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π‡πÄ‡∏™‡πâ‡∏ô‡∏ú‡∏°'::text, 600.00::numeric, 90::integer, 'hair'::text, true::boolean, 'üíÜ'::text, 7::integer),
    ('‡πÅ‡∏ï‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤'::text, 'makeup'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©'::text, 800.00::numeric, 90::integer, 'makeup'::text, true::boolean, 'üíÑ'::text, 8::integer),
    ('‡∏Ç‡∏±‡∏î‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡πâ‡∏≤'::text, 'facial-scrub'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏±‡∏î‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡πâ‡∏≤ ‡∏ú‡∏¥‡∏ß‡πÉ‡∏™ ‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô‡∏ô‡∏∏‡πà‡∏°'::text, 500.00::numeric, 60::integer, 'facial'::text, true::boolean, '‚ú®'::text, 9::integer),
    ('‡∏°‡∏≤‡∏™‡πå‡∏Å‡∏´‡∏ô‡πâ‡∏≤'::text, 'facial-mask'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏™‡πå‡∏Å‡∏´‡∏ô‡πâ‡∏≤ ‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏ú‡∏¥‡∏ß'::text, 400.00::numeric, 45::integer, 'facial'::text, true::boolean, 'üß¥'::text, 10::integer)
) AS service_info(name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank)
WHERE p.username = 'beauty_owner';

-- Insert departments
INSERT INTO departments (shop_id, name, slug, description, employee_count, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  dept_info.name,
  dept_info.slug,
  dept_info.description,
  dept_info.employee_count,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡πÄ‡∏•‡πá‡∏ö'::text, 'nail'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö'::text, 2::integer),
    ('‡∏ú‡∏°'::text, 'hair'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏≥‡∏ú‡∏°'::text, 2::integer),
    ('‡∏´‡∏ô‡πâ‡∏≤'::text, 'facial'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡πâ‡∏≤'::text, 1::integer)
) AS dept_info(name, slug, description, employee_count)
WHERE p.username = 'beauty_owner';

-- Insert employees
INSERT INTO employees (
  shop_id,
  profile_id,
  employee_code,
  name,
  email,
  phone,
  position_text,
  department_id,
  salary,
  hire_date,
  status,
  station_number,
  is_on_duty,
  last_login,
  permissions,
  notes,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  p.id AS profile_id,
  emp_info.employee_code,
  emp_info.name,
  emp_info.email,
  emp_info.phone,
  emp_info.position_text,
  d.id AS department_id,
  emp_info.salary,
  emp_info.hire_date,
  emp_info.status::public.employee_status,
  emp_info.station_number,
  emp_info.is_on_duty,
  emp_info.last_login,
  emp_info.permissions,
  emp_info.notes,
  emp_info.created_at,
  emp_info.updated_at
FROM shops s
JOIN profiles p1 ON s.owner_id = p1.id
CROSS JOIN (
  VALUES 
    ('BEAUTY001', 'beautician1', '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏∏‡∏î‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°', 'beautician1@beautyworld.com', '081-999-1111', '‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏´‡∏•‡∏±‡∏Å', 25000.00, '2023-04-01'::date, 'active', 1, true, NOW() - INTERVAL '1 day', ARRAY['manage_queues','manage_customers','manage_services'], '‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå 7 ‡∏õ‡∏µ', NOW() - INTERVAL '9 months', NOW())
) AS emp_info(employee_code, username, name, email, phone, position_text, salary, hire_date, status, station_number, is_on_duty, last_login, permissions, notes, created_at, updated_at)
JOIN profiles p ON p.username = emp_info.username
JOIN departments d ON d.shop_id = s.id AND d.name = '‡πÄ‡∏•‡πá‡∏ö'
WHERE p1.username = 'beauty_owner';

-- Insert customers
INSERT INTO customers (
  shop_id,
  name,
  phone,
  email,
  date_of_birth,
  gender,
  address,
  notes,
  last_visit,
  is_active,
  profile_id,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  cust_info.name,
  cust_info.phone,
  cust_info.email,
  cust_info.date_of_birth,
  cust_info.gender,
  cust_info.address,
  cust_info.notes,
  cust_info.last_visit,
  cust_info.is_active,
  cust_info.profile_id,
  cust_info.created_at,
  cust_info.updated_at
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏≤‡∏ì‡∏µ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°'::text, '089-111-1111'::text, 'pranee@example.com'::text, '1985-08-15'::date, 'female'::text, '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏µ‡∏•‡∏° ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ‡∏ä‡∏≠‡∏ö‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏™‡∏µ‡πÅ‡∏î‡∏á'::text, NOW() - INTERVAL '5 days', true::boolean, NULL::uuid, NOW() - INTERVAL '8 months', NOW() - INTERVAL '5 days'),
    ('‡∏Ñ‡∏∏‡∏ì‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏£ ‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏õ‡∏•‡∏±‡πà‡∏á'::text, '088-222-2222'::text, 'supaporn@example.com'::text, '1992-12-03'::date, 'female'::text, '456 ‡∏ñ‡∏ô‡∏ô‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏ä‡∏≠‡∏ö‡∏ó‡∏≥‡∏ú‡∏°‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•'::text, NOW() - INTERVAL '10 days', true::boolean, NULL::uuid, NOW() - INTERVAL '6 months', NOW() - INTERVAL '10 days'),
    ('‡∏Ñ‡∏∏‡∏ì‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå ‡πÉ‡∏™‡∏™‡∏∞‡∏≠‡∏≤‡∏î'::text, '087-333-3333'::text, 'maneerat@example.com'::text, '1988-05-20'::date, 'female'::text, '789 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏ä‡∏≠‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡πâ‡∏≤'::text, NOW() - INTERVAL '15 days', true::boolean, NULL::uuid, NOW() - INTERVAL '4 months', NOW() - INTERVAL '15 days')
) AS cust_info(name, phone, email, date_of_birth, gender, address, notes, last_visit, is_active, profile_id, created_at, updated_at)
WHERE p.username = 'beauty_owner';

-- Insert queues
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'beauty_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
),
employee_data AS (
  SELECT 
    e.id AS employee_id,
    e.position_text
  FROM employees e
  JOIN shop_data sd ON e.shop_id = sd.shop_id
)
INSERT INTO queues (
  shop_id,
  customer_id,
  queue_number,
  status,
  priority,
  estimated_duration,
  estimated_call_time,
  served_by_employee_id,
  note,
  feedback,
  rating,
  created_at,
  updated_at,
  served_at,
  completed_at
)
SELECT
  sd.shop_id,
  CASE 
    WHEN q.queue_number = 'B001' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏≤‡∏ì‡∏µ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°')
    WHEN q.queue_number = 'B002' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏£ ‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏õ‡∏•‡∏±‡πà‡∏á')
    WHEN q.queue_number = 'B003' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå ‡πÉ‡∏™‡∏™‡∏∞‡∏≠‡∏≤‡∏î')
  END AS customer_id,
  q.queue_number,
  q.status,
  q.priority,
  q.estimated_duration,
  q.estimated_call_time,
  CASE 
    WHEN q.queue_number IN ('B001', 'B002') THEN (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏´‡∏•‡∏±‡∏Å')
    ELSE NULL
  END AS served_by_employee_id,
  q.note,
  q.feedback,
  q.rating,
  q.created_at,
  q.updated_at,
  q.served_at,
  q.completed_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('B001'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 60::integer, NOW() - INTERVAL '5 days' + INTERVAL '30 minutes', '‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏°‡∏∑‡∏≠‡∏™‡∏µ‡πÅ‡∏î‡∏á'::text, '‡∏™‡∏ß‡∏¢‡∏°‡∏≤‡∏Å ‡∏û‡∏≠‡πÉ‡∏à'::text, 5::integer, NOW() - INTERVAL '5 days', NOW() - INTERVAL '5 days' + INTERVAL '1 hour', NOW() - INTERVAL '5 days' + INTERVAL '30 minutes', NOW() - INTERVAL '5 days' + INTERVAL '1 hour'),
    ('B002'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 180::integer, NOW() - INTERVAL '10 days' + INTERVAL '30 minutes', '‡∏ó‡∏≥‡∏ú‡∏°‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏°‡∏≤‡∏Å'::text, 4::integer, NOW() - INTERVAL '10 days', NOW() - INTERVAL '10 days' + INTERVAL '3 hours', NOW() - INTERVAL '10 days' + INTERVAL '30 minutes', NOW() - INTERVAL '10 days' + INTERVAL '3 hours'),
    ('B003'::text, 'waiting'::public.queue_status, 'high'::public.queue_priority, 60::integer, NOW() + INTERVAL '45 minutes', '‡∏Ç‡∏±‡∏î‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡πâ‡∏≤'::text, NULL::text, NULL::integer, NOW() - INTERVAL '15 minutes', NOW() - INTERVAL '15 minutes', NULL::timestamp, NULL::timestamp)
) AS q(queue_number, status, priority, estimated_duration, estimated_call_time, note, feedback, rating, created_at, updated_at, served_at, completed_at);

-- Insert customer points
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'beauty_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name,
    c.last_visit
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
)
INSERT INTO customer_points (
  shop_id,
  customer_id,
  current_points,
  total_earned,
  total_redeemed,
  membership_tier,
  tier_benefits,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  cd.customer_id,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏≤‡∏ì‡∏µ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°' THEN 150
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏£ ‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏õ‡∏•‡∏±‡πà‡∏á' THEN 200
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå ‡πÉ‡∏™‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN 100
  END AS current_points,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏≤‡∏ì‡∏µ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°' THEN 150
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏£ ‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏õ‡∏•‡∏±‡πà‡∏á' THEN 200
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå ‡πÉ‡∏™‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN 100
  END AS total_earned,
  0 AS total_redeemed,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏≤‡∏ì‡∏µ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°' THEN 'gold'::public.membership_tier
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏£ ‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏õ‡∏•‡∏±‡πà‡∏á' THEN 'platinum'::public.membership_tier
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå ‡πÉ‡∏™‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN 'silver'::public.membership_tier
  END AS membership_tier,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏≤‡∏ì‡∏µ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°' THEN ARRAY['15% discount', 'Priority booking', 'Birthday special']
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏£ ‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏õ‡∏•‡∏±‡πà‡∏á' THEN ARRAY['20% discount', 'VIP treatment', 'Free consultation']
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå ‡πÉ‡∏™‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN ARRAY['10% discount', 'Birthday gift']
  END AS tier_benefits,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏≤‡∏ì‡∏µ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°' THEN NOW() - INTERVAL '8 months'
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏£ ‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏õ‡∏•‡∏±‡πà‡∏á' THEN NOW() - INTERVAL '6 months'
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå ‡πÉ‡∏™‡∏™‡∏∞‡∏≠‡∏≤‡∏î' THEN NOW() - INTERVAL '4 months'
  END AS created_at,
  cd.last_visit AS updated_at
FROM shop_data sd
CROSS JOIN customer_data cd;

-- Insert rewards
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'beauty_owner'
  LIMIT 1
)
INSERT INTO rewards (
  shop_id,
  name,
  description,
  type,
  points_required,
  value,
  is_available,
  expiry_days,
  usage_limit,
  icon,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  reward_info.name,
  reward_info.description,
  reward_info.type,
  reward_info.points_required,
  reward_info.value,
  reward_info.is_available,
  reward_info.expiry_days,
  reward_info.usage_limit,
  reward_info.icon,
  NOW() - INTERVAL '12 months' AS created_at,
  NOW() - INTERVAL '1 day' AS updated_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 15%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 15% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°'::text, 'discount'::public.reward_type, 100::integer, 15.00::numeric, true::boolean, 90::integer, 1::integer, 'üè∑Ô∏è'::text),
    ('‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏ü‡∏£‡∏µ'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏°‡∏∑‡∏≠‡∏ü‡∏£‡∏µ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á'::text, 'free_item'::public.reward_type, 150::integer, 300.00::numeric, true::boolean, 60::integer, 1::integer, 'üíÖ'::text),
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 25%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 25% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å VIP'::text, 'discount'::public.reward_type, 200::integer, 25.00::numeric, true::boolean, 120::integer, 1::integer, '‚≠ê'::text)
) AS reward_info(name, description, type, points_required, value, is_available, expiry_days, usage_limit, icon);

-- Insert username: spa_owner for spa owner
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '95000000-0000-0000-0000-000000000000',
        '95000000-0000-0000-0000-000000000001',
        'authenticated',
        'authenticated',
        'spa_owner@example.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "spa_owner",
          "full_name": "Spa Owner",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for the user
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'spa_owner@example.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Create username: therapist1 for spa therapist
INSERT INTO
    auth.users (
        instance_id,
        id,
        aud,
        role,
        email,
        encrypted_password,
        email_confirmed_at,
        recovery_sent_at,
        last_sign_in_at,
        raw_app_meta_data,
        raw_user_meta_data,
        created_at,
        updated_at,
        confirmation_token,
        email_change,
        email_change_token_new,
        recovery_token
    ) VALUES 
    (
        '95000000-0000-0000-0000-000000000000',
        '95000000-0000-0000-0000-000000000002',
        'authenticated',
        'authenticated',
        'therapist1@relaxspa.com',
        crypt(current_setting('my.app_password'), gen_salt('bf')),
        NOW() - INTERVAL '30 days',
        NULL,
        NOW() - INTERVAL '1 day',
        '{"provider":"email","providers":["email"]}',
        '{
          "username": "therapist1",
          "full_name": "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏∏‡∏Ç‡πÉ‡∏à ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢",
          "role": "user",
          "is_active": true
        }',
        NOW() - INTERVAL '30 days',
        NOW() - INTERVAL '30 days',
        '',
        '',
        '',
        ''
    );

-- Create identities for therapist1
INSERT INTO
    auth.identities (
        id,
        user_id,
        provider_id,
        identity_data,
        provider,
        last_sign_in_at,
        created_at,
        updated_at
    )
SELECT
    uuid_generate_v4(),
    id,
    id,
    format('{"sub":"%s","email":"%s"}', id::text, email)::jsonb,
    'email',
    last_sign_in_at,
    created_at,
    updated_at
FROM
    auth.users
WHERE
    email = 'therapist1@relaxspa.com'
ON CONFLICT (provider_id, provider) DO NOTHING;

-- Insert spa shop
INSERT INTO shops (
  owner_id,
  name,
  slug,
  description,
  address,
  phone,
  email,
  website,
  logo,
  qr_code_url,
  timezone,
  currency,
  language,
  status,
  created_at,
  updated_at
)
SELECT
  p.id AS owner_id,
  '‡∏£‡∏µ‡πÅ‡∏•‡∏Å‡∏ã‡πå ‡∏™‡∏õ‡∏≤ ‡πÅ‡∏≠‡∏ô‡∏î‡πå ‡πÄ‡∏ß‡∏•‡πÄ‡∏ô‡∏™',
  'relax-spa',
  '‡∏™‡∏õ‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡πÄ‡∏ô‡∏™‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢ ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏™‡∏á‡∏ö',
  '777 ‡∏ñ‡∏ô‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏∏ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏∏‡∏°‡∏û‡∏¥‡∏ô‡∏µ ‡πÄ‡∏Ç‡∏ï‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10330',
  '02-888-7777',
  'contact@relaxspa.com',
  'https://relaxspa.com',
  'https://example.com/spa-logo.png',
  'https://example.com/spa-qr.png',
  'Asia/Bangkok',
  'THB',
  'th',
  'active',
  NOW() - INTERVAL '12 months',
  NOW() - INTERVAL '1 day'
FROM profiles p
WHERE p.username = 'spa_owner'
LIMIT 1;

-- Link shop to categories
INSERT INTO category_shops (category_id, shop_id, created_at, updated_at)
SELECT 
  c.id AS category_id,
  s.id AS shop_id,
  NOW(),
  NOW()
FROM categories c
CROSS JOIN shops s
JOIN profiles p ON s.owner_id = p.id
WHERE c.slug = 'spa'
AND p.username = 'spa_owner';

-- Insert shop opening hours
INSERT INTO shop_opening_hours (shop_id, day_of_week, is_open, open_time, close_time, break_start, break_end, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  day_info.day_of_week,
  day_info.is_open,
  day_info.open_time,
  day_info.close_time,
  day_info.break_start,
  day_info.break_end,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('monday'::text, true, '09:00:00'::time, '21:00:00'::time, '13:00:00'::time, '14:00:00'::time),
    ('tuesday'::text, true, '09:00:00'::time, '21:00:00'::time, '13:00:00'::time, '14:00:00'::time),
    ('wednesday'::text, true, '09:00:00'::time, '21:00:00'::time, '13:00:00'::time, '14:00:00'::time),
    ('thursday'::text, true, '09:00:00'::time, '21:00:00'::time, '13:00:00'::time, '14:00:00'::time),
    ('friday'::text, true, '09:00:00'::time, '22:00:00'::time, '13:00:00'::time, '14:00:00'::time),
    ('saturday'::text, true, '08:00:00'::time, '22:00:00'::time, '13:00:00'::time, '14:00:00'::time),
    ('sunday'::text, true, '09:00:00'::time, '20:00:00'::time, '13:00:00'::time, '14:00:00'::time)
) AS day_info(day_of_week, is_open, open_time, close_time, break_start, break_end)
WHERE p.username = 'spa_owner';

-- Insert services for the spa
INSERT INTO services (shop_id, name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  service_info.name,
  service_info.slug,
  service_info.description,
  service_info.price,
  service_info.estimated_duration,
  service_info.category,
  service_info.is_available,
  service_info.icon,
  service_info.popularity_rank,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ô‡∏ß‡∏î‡πÅ‡∏ú‡∏ô‡πÑ‡∏ó‡∏¢'::text, 'thai-massage'::text, '‡∏ô‡∏ß‡∏î‡πÅ‡∏ú‡∏ô‡πÑ‡∏ó‡∏¢‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏° ‡∏Ñ‡∏•‡∏≤‡∏¢‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢'::text, 800.00::numeric, 90::integer, 'massage'::text, true::boolean, 'üôè'::text, 1::integer),
    ('‡∏ô‡∏ß‡∏î‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏´‡∏≠‡∏°‡∏£‡∏∞‡πÄ‡∏´‡∏¢'::text, 'aromatherapy-massage'::text, '‡∏ô‡∏ß‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏´‡∏≠‡∏°‡∏£‡∏∞‡πÄ‡∏´‡∏¢ ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢‡∏à‡∏¥‡∏ï‡πÉ‡∏à'::text, 1200.00::numeric, 120::integer, 'massage'::text, true::boolean, 'üå∏'::text, 2::integer),
    ('‡∏ô‡∏ß‡∏î‡∏´‡∏¥‡∏ô‡∏£‡πâ‡∏≠‡∏ô'::text, 'hot-stone-massage'::text, '‡∏ô‡∏ß‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏¥‡∏ô‡∏£‡πâ‡∏≠‡∏ô ‡∏Ñ‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏∂‡∏á‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î'::text, 1500.00::numeric, 120::integer, 'massage'::text, true::boolean, 'üî•'::text, 3::integer),
    ('‡∏ô‡∏ß‡∏î‡πÄ‡∏ó‡πâ‡∏≤'::text, 'foot-massage'::text, '‡∏ô‡∏ß‡∏î‡πÄ‡∏ó‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ô‡πà‡∏≠‡∏á ‡∏Ñ‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏•‡πâ‡∏≤'::text, 500.00::numeric, 60::integer, 'massage'::text, true::boolean, 'ü¶∂'::text, 4::integer),
    ('‡∏Ç‡∏±‡∏î‡∏ú‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß'::text, 'body-scrub'::text, '‡∏Ç‡∏±‡∏î‡∏ú‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß ‡∏ú‡∏¥‡∏ß‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô‡∏ô‡∏∏‡πà‡∏°'::text, 1000.00::numeric, 90::integer, 'body_treatment'::text, true::boolean, '‚ú®'::text, 5::integer),
    ('‡∏Ñ‡∏£‡∏µ‡∏°‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥'::text, 'milk-bath'::text, '‡∏≠‡∏≤‡∏ö‡∏Ñ‡∏£‡∏µ‡∏°‡∏ô‡∏° ‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏ú‡∏¥‡∏ß'::text, 800.00::numeric, 60::integer, 'body_treatment'::text, true::boolean, 'üõÅ'::text, 6::integer),
    ('‡∏ó‡∏£‡∏µ‡∏ó‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏´‡∏ô‡πâ‡∏≤'::text, 'facial-treatment'::text, '‡∏ó‡∏£‡∏µ‡∏ó‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£'::text, 1200.00::numeric, 90::integer, 'facial'::text, true::boolean, 'üíÜ'::text, 7::integer),
    ('‡∏°‡∏≤‡∏™‡πå‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥'::text, 'gold-facial-mask'::text, '‡∏°‡∏≤‡∏™‡πå‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥ ‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏ú‡∏¥‡∏ß‡∏û‡∏¥‡πÄ‡∏®‡∏©'::text, 2000.00::numeric, 75::integer, 'facial'::text, true::boolean, 'üëë'::text, 8::integer),
    ('‡∏™‡∏õ‡∏≤‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏Ñ‡∏π‡πà'::text, 'couple-spa-package'::text, '‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏™‡∏õ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏£‡∏±‡∏Å'::text, 3000.00::numeric, 180::integer, 'package'::text, true::boolean, 'üíï'::text, 9::integer),
    ('‡∏î‡∏µ‡∏ó‡πá‡∏≠‡∏Å‡∏ã‡πå‡∏ö‡∏≠‡∏î‡∏µ‡πâ'::text, 'detox-body-wrap'::text, '‡∏î‡∏µ‡∏ó‡πá‡∏≠‡∏Å‡∏ã‡πå‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢ ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ß‡∏°'::text, 1800.00::numeric, 120::integer, 'body_treatment'::text, true::boolean, 'üåø'::text, 10::integer)
) AS service_info(name, slug, description, price, estimated_duration, category, is_available, icon, popularity_rank)
WHERE p.username = 'spa_owner';

-- Insert departments
INSERT INTO departments (shop_id, name, slug, description, employee_count, created_at, updated_at)
SELECT 
  s.id AS shop_id,
  dept_info.name,
  dept_info.slug,
  dept_info.description,
  dept_info.employee_count,
  NOW(),
  NOW()
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏ô‡∏ß‡∏î'::text, 'massage'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ô‡∏ß‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏≥‡∏ö‡∏±‡∏î'::text, 3::integer),
    ('‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏¥‡∏ß'::text, 'skincare'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏¥‡∏ß‡πÅ‡∏•‡∏∞‡∏ó‡∏£‡∏µ‡∏ó‡πÄ‡∏°‡∏ô‡∏ï‡πå'::text, 2::integer),
    ('‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö'::text, 'reception'::text, '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤'::text, 1::integer)
) AS dept_info(name, slug, description, employee_count)
WHERE p.username = 'spa_owner';

-- Insert employees
INSERT INTO employees (
  shop_id,
  profile_id,
  employee_code,
  name,
  email,
  phone,
  position_text,
  department_id,
  salary,
  hire_date,
  status,
  station_number,
  is_on_duty,
  last_login,
  permissions,
  notes,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  p.id AS profile_id,
  emp_info.employee_code,
  emp_info.name,
  emp_info.email,
  emp_info.phone,
  emp_info.position_text,
  d.id AS department_id,
  emp_info.salary,
  emp_info.hire_date,
  emp_info.status::public.employee_status,
  emp_info.station_number,
  emp_info.is_on_duty,
  emp_info.last_login,
  emp_info.permissions,
  emp_info.notes,
  emp_info.created_at,
  emp_info.updated_at
FROM shops s
JOIN profiles p1 ON s.owner_id = p1.id
CROSS JOIN (
  VALUES 
    ('SPA001', 'therapist1', '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏∏‡∏Ç‡πÉ‡∏à ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢', 'therapist1@relaxspa.com', '081-888-7777', '‡∏ô‡∏±‡∏Å‡∏ö‡∏≥‡∏ö‡∏±‡∏î‡∏´‡∏•‡∏±‡∏Å', 30000.00, '2023-02-15'::date, 'active', 1, true, NOW() - INTERVAL '1 day', ARRAY['manage_queues','manage_customers','manage_services'], '‡∏ô‡∏±‡∏Å‡∏ö‡∏≥‡∏ö‡∏±‡∏î‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏°‡∏µ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏ô‡∏ß‡∏î‡πÅ‡∏ú‡∏ô‡πÑ‡∏ó‡∏¢', NOW() - INTERVAL '11 months', NOW())
) AS emp_info(employee_code, username, name, email, phone, position_text, salary, hire_date, status, station_number, is_on_duty, last_login, permissions, notes, created_at, updated_at)
JOIN profiles p ON p.username = emp_info.username
JOIN departments d ON d.shop_id = s.id AND d.name = '‡∏ô‡∏ß‡∏î'
WHERE p1.username = 'spa_owner';

-- Insert customers
INSERT INTO customers (
  shop_id,
  name,
  phone,
  email,
  date_of_birth,
  gender,
  address,
  notes,
  last_visit,
  is_active,
  profile_id,
  created_at,
  updated_at
)
SELECT
  s.id AS shop_id,
  cust_info.name,
  cust_info.phone,
  cust_info.email,
  cust_info.date_of_birth,
  cust_info.gender,
  cust_info.address,
  cust_info.notes,
  cust_info.last_visit,
  cust_info.is_active,
  cust_info.profile_id,
  cust_info.created_at,
  cust_info.updated_at
FROM shops s
JOIN profiles p ON s.owner_id = p.id
CROSS JOIN (
  VALUES 
    ('‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ß‡∏±‡∏á ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢'::text, '089-888-1111'::text, 'somwang@example.com'::text, '1980-09-12'::date, 'male'::text, '111 ‡∏ñ‡∏ô‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥ ‡∏ä‡∏≠‡∏ö‡∏ô‡∏ß‡∏î‡πÅ‡∏ú‡∏ô‡πÑ‡∏ó‡∏¢'::text, NOW() - INTERVAL '7 days', true::boolean, NULL::uuid, NOW() - INTERVAL '10 months', NOW() - INTERVAL '7 days'),
    ('‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏°‡∏•‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à'::text, '088-777-2222'::text, 'wimonrat@example.com'::text, '1975-04-28'::date, 'female'::text, '222 ‡∏ñ‡∏ô‡∏ô‡πÄ‡∏û‡∏•‡∏¥‡∏ô‡∏à‡∏¥‡∏ï ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏ä‡∏≠‡∏ö‡∏ô‡∏ß‡∏î‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏´‡∏≠‡∏°‡∏£‡∏∞‡πÄ‡∏´‡∏¢'::text, NOW() - INTERVAL '12 days', true::boolean, NULL::uuid, NOW() - INTERVAL '8 months', NOW() - INTERVAL '12 days'),
    ('‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢'::text, '087-666-3333'::text, 'prayuth@example.com'::text, '1983-11-15'::date, 'male'::text, '333 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏≤‡∏ä‡∏î‡∏≥‡∏£‡∏¥ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'::text, '‡∏°‡∏≤‡∏Å‡∏±‡∏ö‡∏†‡∏£‡∏£‡∏¢‡∏≤ ‡∏ä‡∏≠‡∏ö‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏Ñ‡∏π‡πà'::text, NOW() - INTERVAL '20 days', true::boolean, NULL::uuid, NOW() - INTERVAL '6 months', NOW() - INTERVAL '20 days')
) AS cust_info(name, phone, email, date_of_birth, gender, address, notes, last_visit, is_active, profile_id, created_at, updated_at)
WHERE p.username = 'spa_owner';

-- Insert queues
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'spa_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
),
employee_data AS (
  SELECT 
    e.id AS employee_id,
    e.position_text
  FROM employees e
  JOIN shop_data sd ON e.shop_id = sd.shop_id
)
INSERT INTO queues (
  shop_id,
  customer_id,
  queue_number,
  status,
  priority,
  estimated_duration,
  estimated_call_time,
  served_by_employee_id,
  note,
  feedback,
  rating,
  created_at,
  updated_at,
  served_at,
  completed_at
)
SELECT
  sd.shop_id,
  CASE 
    WHEN q.queue_number = 'S001' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ß‡∏±‡∏á ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢')
    WHEN q.queue_number = 'S002' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏°‡∏•‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à')
    WHEN q.queue_number = 'S003' THEN (SELECT customer_id FROM customer_data WHERE name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢')
  END AS customer_id,
  q.queue_number,
  q.status,
  q.priority,
  q.estimated_duration,
  q.estimated_call_time,
  CASE 
    WHEN q.queue_number IN ('S001', 'S002') THEN (SELECT employee_id FROM employee_data WHERE position_text = '‡∏ô‡∏±‡∏Å‡∏ö‡∏≥‡∏ö‡∏±‡∏î‡∏´‡∏•‡∏±‡∏Å')
    ELSE NULL
  END AS served_by_employee_id,
  q.note,
  q.feedback,
  q.rating,
  q.created_at,
  q.updated_at,
  q.served_at,
  q.completed_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('S001'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 90::integer, NOW() - INTERVAL '7 days' + INTERVAL '30 minutes', '‡∏ô‡∏ß‡∏î‡πÅ‡∏ú‡∏ô‡πÑ‡∏ó‡∏¢ 90 ‡∏ô‡∏≤‡∏ó‡∏µ'::text, '‡∏ô‡∏ß‡∏î‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢'::text, 5::integer, NOW() - INTERVAL '7 days', NOW() - INTERVAL '7 days' + INTERVAL '1 hour 30 minutes', NOW() - INTERVAL '7 days' + INTERVAL '30 minutes', NOW() - INTERVAL '7 days' + INTERVAL '2 hours'),
    ('S002'::text, 'completed'::public.queue_status, 'normal'::public.queue_priority, 120::integer, NOW() - INTERVAL '12 days' + INTERVAL '30 minutes', '‡∏ô‡∏ß‡∏î‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏´‡∏≠‡∏°‡∏£‡∏∞‡πÄ‡∏´‡∏¢'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏™‡∏á‡∏ö'::text, 4::integer, NOW() - INTERVAL '12 days', NOW() - INTERVAL '12 days' + INTERVAL '2 hours', NOW() - INTERVAL '12 days' + INTERVAL '30 minutes', NOW() - INTERVAL '12 days' + INTERVAL '2 hours 30 minutes'),
    ('S003'::text, 'confirmed'::public.queue_status, 'high'::public.queue_priority, 180::integer, NOW() + INTERVAL '2 hours', '‡∏™‡∏õ‡∏≤‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏Ñ‡∏π‡πà'::text, NULL::text, NULL::integer, NOW() - INTERVAL '30 minutes', NOW() - INTERVAL '30 minutes', NULL::timestamp, NULL::timestamp)
) AS q(queue_number, status, priority, estimated_duration, estimated_call_time, note, feedback, rating, created_at, updated_at, served_at, completed_at);

-- Insert customer points
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'spa_owner'
  LIMIT 1
),
customer_data AS (
  SELECT 
    c.id AS customer_id,
    c.name,
    c.last_visit
  FROM customers c
  JOIN shop_data sd ON c.shop_id = sd.shop_id
)
INSERT INTO customer_points (
  shop_id,
  customer_id,
  current_points,
  total_earned,
  total_redeemed,
  membership_tier,
  tier_benefits,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  cd.customer_id,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ß‡∏±‡∏á ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢' THEN 180
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏°‡∏•‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à' THEN 250
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢' THEN 320
  END AS current_points,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ß‡∏±‡∏á ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢' THEN 180
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏°‡∏•‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à' THEN 250
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢' THEN 320
  END AS total_earned,
  0 AS total_redeemed,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ß‡∏±‡∏á ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢' THEN 'gold'::public.membership_tier
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏°‡∏•‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à' THEN 'platinum'::public.membership_tier
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢' THEN 'platinum'::public.membership_tier
  END AS membership_tier,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ß‡∏±‡∏á ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢' THEN ARRAY['15% discount', 'Priority booking', 'Complimentary tea']
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏°‡∏•‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à' THEN ARRAY['20% discount', 'VIP room', 'Free aromatherapy upgrade']
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢' THEN ARRAY['25% discount', 'VIP treatment', 'Free couple upgrade']
  END AS tier_benefits,
  CASE 
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ß‡∏±‡∏á ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢' THEN NOW() - INTERVAL '10 months'
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏°‡∏•‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à' THEN NOW() - INTERVAL '8 months'
    WHEN cd.name = '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢' THEN NOW() - INTERVAL '6 months'
  END AS created_at,
  cd.last_visit AS updated_at
FROM shop_data sd
CROSS JOIN customer_data cd;

-- Insert rewards
WITH shop_data AS (
  SELECT s.id AS shop_id
  FROM shops s
  JOIN profiles p ON s.owner_id = p.id
  WHERE p.username = 'spa_owner'
  LIMIT 1
)
INSERT INTO rewards (
  shop_id,
  name,
  description,
  type,
  points_required,
  value,
  is_available,
  expiry_days,
  usage_limit,
  icon,
  created_at,
  updated_at
)
SELECT
  sd.shop_id,
  reward_info.name,
  reward_info.description,
  reward_info.type,
  reward_info.points_required,
  reward_info.value,
  reward_info.is_available,
  reward_info.expiry_days,
  reward_info.usage_limit,
  reward_info.icon,
  NOW() - INTERVAL '12 months' AS created_at,
  NOW() - INTERVAL '1 day' AS updated_at
FROM shop_data sd
CROSS JOIN (
  VALUES 
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 20%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 20% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏õ‡∏≤'::text, 'discount'::public.reward_type, 150::integer, 20.00::numeric, true::boolean, 90::integer, 1::integer, 'üè∑Ô∏è'::text),
    ('‡∏ô‡∏ß‡∏î‡πÄ‡∏ó‡πâ‡∏≤‡∏ü‡∏£‡∏µ'::text, '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡πÄ‡∏ó‡πâ‡∏≤‡∏ü‡∏£‡∏µ 60 ‡∏ô‡∏≤‡∏ó‡∏µ'::text, 'free_item'::public.reward_type, 200::integer, 500.00::numeric, true::boolean, 60::integer, 1::integer, 'ü¶∂'::text),
    ('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 30%'::text, '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 30% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å VIP'::text, 'discount'::public.reward_type, 300::integer, 30.00::numeric, true::boolean, 120::integer, 1::integer, '‚≠ê'::text)
) AS reward_info(name, description, type, points_required, value, is_available, expiry_days, usage_limit, icon);
